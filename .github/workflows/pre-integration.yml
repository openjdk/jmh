name: JMH Pre-Integration Tests

on:
  push:
    branches-ignore:
      - master
      - pr/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [8, 11, 17, 21]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}
    timeout-minutes: 180

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: ${{ matrix.java }}
        cache: maven
        check-latest: true
    - name: Set up perf (Linux)
      run: |
        sudo apt-get update
        sudo apt-get install -y linux-tools-common linux-tools-generic linux-tools-`uname -r`
        echo -1 | sudo tee /proc/sys/kernel/perf_event_paranoid
        perf stat echo 1
      if: (runner.os == 'Linux')
    - name: Set up async-profiler (Linux)
      run: |
        curl -L https://github.com/async-profiler/async-profiler/releases/download/v3.0/async-profiler-3.0-linux-x64.tar.gz | tar xzf -
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`pwd`/async-profiler-3.0-linux-x64/lib/" >> $GITHUB_ENV
      if: (runner.os == 'Linux')

    - name: Build with tests (Default)
      run: mvn clean install -B --file pom.xml

    - name: Build with tests (Reflection)
      run: mvn clean install -P reflection -B --file pom.xml
      if: (runner.os == 'Linux')

    - name: Build without tests (Reflection)
      run: mvn clean install -P reflection -B --file pom.xml -DskipTests
      if: (runner.os != 'Linux')

    - name: Build with tests (ASM)
      run: mvn clean install -P asm -B --file pom.xml
      if: (runner.os == 'Linux')

    - name: Build without tests (ASM)
      run: mvn clean install -P asm -B --file pom.xml -DskipTests
      if: (runner.os != 'Linux')

    - name: Build with tests (FJP Executor)
      run: mvn clean install -P executor-fjp -B --file pom.xml
      if: (runner.os == 'Linux')

    - name: Build with tests (Custom Executor)
      run: mvn clean install -P executor-custom -B --file pom.xml
      if: (runner.os == 'Linux')

    - name: Build with tests (Virtual Executor)
      run: mvn clean install -P executor-virtual -B --file pom.xml
      if: (runner.os == 'Linux') && (matrix.java == '21')
