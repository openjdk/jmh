<?xml version="1.0"?>
<trace-query-result>
    <node xpath='//trace-toc[1]/run[1]/data[1]/table[3]'><schema name="counters-profile"><col><mnemonic>time</mnemonic><name>Sample Time</name><engineering-type>sample-time</engineering-type></col><col><mnemonic>thread</mnemonic><name>Thread</name><engineering-type>thread</engineering-type></col><col><mnemonic>process</mnemonic><name>Process</name><engineering-type>process</engineering-type></col><col><mnemonic>core</mnemonic><name>Core</name><engineering-type>core</engineering-type></col><col><mnemonic>thread-state</mnemonic><name>State</name><engineering-type>thread-state</engineering-type></col><col><mnemonic>stack</mnemonic><name>Backtrace</name><engineering-type>backtrace</engineering-type></col><col><mnemonic>weight</mnemonic><name>Weight</name><engineering-type>any</engineering-type></col><col><mnemonic>counters-array</mnemonic><name>Counter Value Array</name><engineering-type>pmc-events</engineering-type></col></schema><row><sample-time id="1" fmt="00:00.402.129">402129330</sample-time><thread id="2" fmt="Main Thread  0x6c57d (java, pid: 13748)"><tid id="3" fmt="0x6c57d">443773</tid><process id="4" fmt="java (13748)"><pid id="5" fmt="13748">13748</pid><device-session id="6" fmt="TODO">TODO</device-session></process></thread><process ref="4"/><core id="7" fmt="CPU 4">4</core><thread-state id="8" fmt="Running">Running</thread-state><sentinel/><weight id="9" fmt="1.00 ms">1000000</weight><pmc-events id="10" fmt="(120.029), (214.575)">120029 214575</pmc-events></row>
        <row><sample-time id="11" fmt="00:00.403.129">403129785</sample-time><thread ref="2"/><process ref="4"/><core id="12" fmt="CPU 5 (SMT Core)">5</core><thread-state ref="8"/><backtrace id="13"><frame id="14" name="0x103d5e809" addr="0x103d5e809"><binary id="15" name="libjvm.dylib" UUID="C7C3D413-8BD5-3D4F-BB6A-96867BF8C3D6" arch="x86_64" load-addr="0x103923000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/server/libjvm.dylib"/></frame><frame id="16" name="0x103d5e7c7" addr="0x103d5e7c7"><binary ref="15"/></frame><frame id="17" name="0x103d912d1" addr="0x103d912d1"><binary ref="15"/></frame><frame id="18" name="start" addr="0x7ff8174e409c"><binary id="19" name="dyld" UUID="31E1C182-E611-3883-97A3-4334A21C90BD" arch="x86_64" load-addr="0x7ff8174de000" path="/usr/lib/dyld"/></frame></backtrace><weight ref="9"/><pmc-events id="20" fmt="(0), (0)">0 0</pmc-events></row>
        <row><sample-time id="21" fmt="00:00.404.129">404129342</sample-time><thread ref="2"/><process ref="4"/><core id="22" fmt="CPU 6">6</core><thread-state ref="8"/><backtrace id="23"><frame id="24" name="__kdebug_trace64" addr="0x7ff8174e2a07"><binary ref="19"/></frame><frame id="25" name="dyld3::ScopedTimer::endTimer()" addr="0x7ff8174df9ee"><binary ref="19"/></frame><frame id="26" name="dyld4::RuntimeState::withCurrentProcessSnapshot(void (lsl::EphemeralAllocator&amp;, dyld4::Atlas::ProcessSnapshot*) block_pointer)" addr="0x7ff8174ef345"><binary ref="19"/></frame><frame id="27" name="dyld4::RuntimeState::notifyDebuggerLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)" addr="0x7ff8174eefd9"><binary ref="19"/></frame><frame id="28" name="dyld4::RuntimeState::notifyDebuggerLoad(dyld4::Loader const*)" addr="0x7ff8174eef24"><binary ref="19"/></frame><frame id="29" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e4bc3"><binary ref="19"/></frame><frame id="30" name="start" addr="0x7ff8174e43bd"><binary ref="19"/></frame></backtrace><weight ref="9"/><pmc-events id="31" fmt="(177.215), (238.426)">177215 238426</pmc-events></row>
        <row><sample-time id="32" fmt="00:00.407.130">407130268</sample-time><thread ref="2"/><process ref="4"/><core id="33" fmt="CPU 0">0</core><thread-state ref="8"/><backtrace id="34"><frame id="35" name="__fcntl" addr="0x7ff8174e25f3"><binary ref="19"/></frame><frame id="36" name="dyld4::Loader::mapSegments(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, unsigned long long, dyld4::Loader::CodeSignatureInFile const&amp;, bool, dyld3::Array&lt;dyld4::Loader::Region&gt; const&amp;, bool, bool, dyld4::Loader::FileValidationInfo const&amp;)" addr="0x7ff8174f8be8"><binary ref="19"/></frame><frame id="37" name="invocation function for block in dyld4::JustInTimeLoader::makeJustInTimeLoaderDisk(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, bool, unsigned int, mach_o::Layout const*)" addr="0x7ff817500af5"><binary ref="19"/></frame><frame id="38" name="dyld4::JustInTimeLoader::withRegions(dyld3::MachOFile const*, void (dyld3::Array&lt;dyld4::Loader::Region&gt; const&amp;) block_pointer)" addr="0x7ff81750041e"><binary ref="19"/></frame><frame id="39" name="invocation function for block in dyld4::JustInTimeLoader::makeJustInTimeLoaderDisk(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, bool, unsigned int, mach_o::Layout const*)" addr="0x7ff8175009ee"><binary ref="19"/></frame><frame id="40" name="dyld4::SyscallDelegate::withReadOnlyMappedFile(Diagnostics&amp;, char const*, bool, void (void const*, unsigned long, bool, dyld4::FileID const&amp;, char const*) block_pointer) const" addr="0x7ff817507866"><binary ref="19"/></frame><frame id="41" name="dyld4::JustInTimeLoader::makeJustInTimeLoaderDisk(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, bool, unsigned int, mach_o::Layout const*)" addr="0x7ff8175007c6"><binary ref="19"/></frame><frame id="42" name="invocation function for block in dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174f80b3"><binary ref="19"/></frame><frame id="43" name="invocation function for block in dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer)" addr="0x7ff8174f86d4"><binary ref="19"/></frame><frame id="44" name="dyld3::MachOFile::forEachLoadCommand(Diagnostics&amp;, void (load_command const*, bool&amp;) block_pointer) const" addr="0x7ff8174e00af"><binary ref="19"/></frame><frame id="45" name="dyld3::MachOFile::forEachRPath(void (char const*, bool&amp;) block_pointer) const" addr="0x7ff8175311a0"><binary ref="19"/></frame><frame id="46" name="dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer)" addr="0x7ff8174f73c0"><binary ref="19"/></frame><frame id="47" name="dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, dyld3::Platform, bool, bool, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) const" addr="0x7ff8174e727c"><binary ref="19"/></frame><frame id="48" name="dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer)" addr="0x7ff8174f6f3d"><binary ref="19"/></frame><frame id="49" name="dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174f779e"><binary ref="19"/></frame><frame id="50" name="invocation function for block in dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174feaf9"><binary ref="19"/></frame><frame id="51" name="invocation function for block in dyld3::MachOFile::forEachDependentDylib(void (char const*, bool, bool, bool, unsigned int, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81752f622"><binary ref="19"/></frame><frame ref="44"/><frame id="52" name="dyld3::MachOFile::forEachDependentDylib(void (char const*, bool, bool, bool, unsigned int, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81752f49a"><binary ref="19"/></frame><frame id="53" name="dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174fe82e"><binary ref="19"/></frame><frame id="54" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e4ea2"><binary ref="19"/></frame><frame ref="30"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="55" fmt="00:00.414.129">414129588</sample-time><thread ref="2"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="56"><frame id="57" name="dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const" addr="0x7ff81752f049"><binary ref="19"/></frame><frame id="58" name="dyld3::MachOFile::forEachDOFSection(Diagnostics&amp;, void (unsigned int) block_pointer) const" addr="0x7ff817531db3"><binary ref="19"/></frame><frame id="59" name="dyld4::RuntimeState::notifyDtrace(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)" addr="0x7ff8174ef740"><binary ref="19"/></frame><frame id="60" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e4fe3"><binary ref="19"/></frame><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="61" fmt="(2.162.351), (1.609.379)">2162351 1609379</pmc-events></row>
        <row><sample-time id="62" fmt="00:00.415.134">415134072</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="63"><frame id="64" name="dyld3::MachOFile::inCodeSection(unsigned int) const" addr="0x7ff8175311f3"><binary ref="19"/></frame><frame id="65" name="dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const" addr="0x7ff8174fb8aa"><binary ref="19"/></frame><frame id="66" name="dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const" addr="0x7ff8174fb7c1"><binary ref="19"/></frame><frame id="67" name="dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const" addr="0x7ff8174fb1ba"><binary ref="19"/></frame><frame id="68" name="invocation function for block in dyld4::JustInTimeLoader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const" addr="0x7ff8174fffd9"><binary ref="19"/></frame><frame id="69" name="invocation function for block in mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff8175368c1"><binary ref="19"/></frame><frame id="70" name="mach_o::Fixups::forEachBind_OpcodesLazy(Diagnostics&amp;, void (char const*, bool, bool, unsigned int, int, unsigned int, unsigned int, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const" addr="0x7ff817536285"><binary ref="19"/></frame><frame id="71" name="mach_o::Fixups::forEachBindUnified_Opcodes(Diagnostics&amp;, bool, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff817535925"><binary ref="19"/></frame><frame id="72" name="mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff817535312"><binary ref="19"/></frame><frame id="73" name="invocation function for block in dyld4::JustInTimeLoader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const" addr="0x7ff8174fff54"><binary ref="19"/></frame><frame id="74" name="dyld3::MachOAnalyzer::withVMLayout(Diagnostics&amp;, void (mach_o::Layout const&amp;) block_pointer) const" addr="0x7ff817538428"><binary ref="19"/></frame><frame id="75" name="dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool) const" addr="0x7ff8174ff203"><binary ref="19"/></frame><frame id="76" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e52a5"><binary ref="19"/></frame><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="77" fmt="(2.772.387), (1.153.827)">2772387 1153827</pmc-events></row>
        <row><sample-time id="78" fmt="00:00.416.131">416131810</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="79"><frame ref="24"/><frame id="80" name="dyld3::kdebug_trace_dyld_image(unsigned int, char const*, unsigned char const (*) [16], fsobj_id, fsid, mach_header const*)" addr="0x7ff817522c4f"><binary ref="19"/></frame><frame id="81" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e548e"><binary ref="19"/></frame><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="82" fmt="(199.731), (273.077)">199731 273077</pmc-events></row>
        <row><sample-time id="83" fmt="00:00.417.131">417131140</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="84"><frame id="85" name="mprotect" addr="0x7ff817549e5b"><binary ref="19"/></frame><frame id="86" name="dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const" addr="0x7ff8174fa60e"><binary ref="19"/></frame><frame id="87" name="dyld4::PrebuiltLoader::runInitializers(dyld4::RuntimeState&amp;) const" addr="0x7ff8175031d4"><binary ref="19"/></frame><frame id="88" name="dyld4::APIs::runAllInitializersForMain()" addr="0x7ff81751bbdd"><binary ref="19"/></frame><frame id="89" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e5874"><binary ref="19"/></frame><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="90" fmt="(163.948), (396.064)">163948 396064</pmc-events></row>
        <row><sample-time id="91" fmt="00:00.419.129">419129416</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="92"><frame id="93" name="attachCategories(objc_class*, locstamped_category_t const*, unsigned int, int)" addr="0x7ff8174a8bbe"><binary id="94" name="libobjc.A.dylib" UUID="461F6347-D5E0-306D-B68D-5EA48625C01E" arch="x86_64h" load-addr="0x7ff8174a2000" path="/usr/lib/libobjc.A.dylib"/></frame><frame id="95" name="load_categories_nolock(header_info*)::$_10::operator()(category_t* const*) const" addr="0x7ff8174c22e3"><binary ref="94"/></frame><frame id="96" name="load_categories_nolock(header_info*)" addr="0x7ff8174c2171"><binary ref="94"/></frame><frame id="97" name="load_images" addr="0x7ff8174ac0db"><binary ref="94"/></frame><frame id="98" name="dyld4::RuntimeState::notifyObjCInit(dyld4::Loader const*)" addr="0x7ff8174f06d8"><binary ref="19"/></frame><frame id="99" name="dyld4::APIs::runAllInitializersForMain()" addr="0x7ff81751bc6f"><binary ref="19"/></frame><frame ref="89"/><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="100" fmt="(2.170.358), (1.741.367)">2170358 1741367</pmc-events></row>
        <row><sample-time id="101" fmt="00:00.420.129">420129208</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="102"><frame id="103" name="-[_NSThreadData init]" addr="0x7ff818d1eac5"><binary id="104" name="Foundation" UUID="0CD9336A-BC14-3BC9-9FB9-58E87CA621BA" arch="x86_64" load-addr="0x7ff818745000" path="/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation"/></frame><frame id="105" name="-[NSThread init]" addr="0x7ff818747faf"><binary ref="104"/></frame><frame id="106" name="____mainNSThread_block_invoke" addr="0x7ff818d1f20d"><binary ref="104"/></frame><frame id="107" name="_dispatch_client_callout" addr="0x7ff81769d033"><binary id="108" name="libdispatch.dylib" UUID="677AE7F7-158F-328B-85E2-8A960327856D" arch="x86_64" load-addr="0x7ff81769a000" path="/usr/lib/system/libdispatch.dylib"/></frame><frame id="109" name="_dispatch_once_callout" addr="0x7ff81769e267"><binary ref="108"/></frame><frame id="110" name="_NSThreadGet0" addr="0x7ff818747f7e"><binary ref="104"/></frame><frame id="111" name="_NSInitializePlatform" addr="0x7ff818747bc4"><binary ref="104"/></frame><frame id="112" name="load_images" addr="0x7ff8174ac3ed"><binary ref="94"/></frame><frame ref="98"/><frame id="113" name="dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const" addr="0x7ff8174fa84f"><binary ref="19"/></frame><frame id="114" name="dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const" addr="0x7ff8174fa83d"><binary ref="19"/></frame><frame ref="114"/><frame ref="114"/><frame ref="114"/><frame ref="114"/><frame ref="114"/><frame ref="114"/><frame id="115" name="dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const::$_1::operator()() const" addr="0x7ff8174fd46f"><binary ref="19"/></frame><frame id="116" name="dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const" addr="0x7ff8174fa8f1"><binary ref="19"/></frame><frame id="117" name="dyld4::APIs::runAllInitializersForMain()" addr="0x7ff81751bcd2"><binary ref="19"/></frame><frame ref="89"/><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="118" fmt="(1.717.396), (1.880.602)">1717396 1880602</pmc-events></row>
        <row><sample-time id="119" fmt="00:00.421.135">421135264</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="120"><frame id="121" name="arc4random_buf" addr="0x7ff8176e66e5"><binary id="122" name="libsystem_c.dylib" UUID="D5B303AD-54F4-323B-BBE2-2D0F34C45649" arch="x86_64" load-addr="0x7ff8176e5000" path="/usr/lib/system/libsystem_c.dylib"/></frame><frame ref="107"/><frame ref="109"/><frame id="123" name="os_log_create" addr="0x7ff8175bfafb"><binary id="124" name="libsystem_trace.dylib" UUID="101B76FE-DFFE-3437-903D-DE5AEA4FB606" arch="x86_64" load-addr="0x7ff8175bc000" path="/usr/lib/system/libsystem_trace.dylib"/></frame><frame id="125" name="___CFBundleLoadingLogger_block_invoke" addr="0x7ff8179a06d1"><binary id="126" name="CoreFoundation" UUID="46F56317-E54F-30CA-83E3-516C8156327D" arch="x86_64h" load-addr="0x7ff81789d000" path="/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation"/></frame><frame ref="107"/><frame ref="109"/><frame id="127" name="_CFBundleLoadingLogger" addr="0x7ff8179c4408"><binary ref="126"/></frame><frame id="128" name="CFBundleGetMainBundle" addr="0x7ff8178a8df7"><binary ref="126"/></frame><frame id="129" name="+[NSBundle mainBundle]" addr="0x7ff8187488f3"><binary ref="104"/></frame><frame id="130" name="+[NSApplication load]" addr="0x7ff81a978dc9"><binary id="131" name="AppKit" UUID="C5499C27-03C5-3194-815E-94CF6E6B68DB" arch="x86_64" load-addr="0x7ff81a976000" path="/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit"/></frame><frame id="132" name="load_images" addr="0x7ff8174ac59c"><binary ref="94"/></frame><frame ref="98"/><frame ref="113"/><frame ref="114"/><frame ref="114"/><frame ref="114"/><frame ref="115"/><frame ref="116"/><frame ref="117"/><frame ref="89"/><frame ref="30"/></backtrace><weight ref="9"/><pmc-events id="133" fmt="(47.537), (78.516)">47537 78516</pmc-events></row>
        <row><sample-time id="134" fmt="00:00.423.131">423131000</sample-time><thread ref="2"/><process ref="4"/><core id="135" fmt="CPU 2">2</core><thread-state ref="8"/><backtrace id="136"><frame id="137" name="JLI_List_new" addr="0x102783f61"><binary id="138" name="libjli.dylib" UUID="5A374700-9DB8-31DE-A6A3-7859E65688D4" arch="x86_64" load-addr="0x10277c000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/libjli.dylib"/></frame><frame id="139" name="main" addr="0x10271aa8c"><binary id="140" name="java" UUID="643046EF-C8E4-343E-BF97-AF35D8BFFB64" arch="x86_64" load-addr="0x10271a000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/bin/java"/></frame><frame id="141" name="start" addr="0x7ff8174e441f"><binary ref="19"/></frame></backtrace><weight ref="9"/><pmc-events id="142" fmt="(626.378), (1.085.929)">626378 1085929</pmc-events></row>
        <row><sample-time id="143" fmt="00:00.426.130">426130020</sample-time><thread ref="2"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="144"><frame id="145" name="stat$INODE64" addr="0x7ff817800af3"><binary id="146" name="libsystem_kernel.dylib" UUID="642737CE-21CF-3D87-A7B6-7EEA2C080A7E" arch="x86_64" load-addr="0x7ff8177fe000" path="/usr/lib/system/libsystem_kernel.dylib"/></frame><frame id="147" name="CreateExecutionEnvironment" addr="0x102782d64"><binary ref="138"/></frame><frame id="148" name="JLI_Launch" addr="0x10277e917"><binary ref="138"/></frame><frame id="149" name="main" addr="0x10271abfe"><binary ref="140"/></frame><frame ref="141"/></backtrace><weight ref="9"/><pmc-events id="150" fmt="(6.562), (71.207)">6562 71207</pmc-events></row>
        <row><sample-time id="151" fmt="00:00.427.130">427130556</sample-time><thread id="152" fmt="_pthread_start  0x6c58a (java, pid: 13748)"><tid id="153" fmt="0x6c58a">443786</tid><process ref="4"/></thread><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="154"><frame id="155" name="strcmp" addr="0x7ff8174e0d1b"><binary ref="19"/></frame><frame id="156" name="dyld4::PrebuiltLoader::matchesPath(char const*) const" addr="0x7ff81750179d"><binary ref="19"/></frame><frame id="157" name="invocation function for block in dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174f7b2a"><binary ref="19"/></frame><frame id="158" name="dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer)" addr="0x7ff8174f73f9"><binary ref="19"/></frame><frame id="159" name="dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, dyld3::Platform, bool, bool, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) const" addr="0x7ff8174e74c9"><binary ref="19"/></frame><frame ref="48"/><frame ref="49"/><frame id="160" name="dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator()() const" addr="0x7ff81751c343"><binary ref="19"/></frame><frame id="161" name="dyld4::APIs::dlopen_from(char const*, int, void*)" addr="0x7ff817517370"><binary ref="19"/></frame><frame id="162" name="LoadJavaVM" addr="0x1027832ee"><binary ref="138"/></frame><frame id="163" name="JLI_Launch" addr="0x10277e94c"><binary ref="138"/></frame><frame ref="149"/><frame id="164" name="apple_main" addr="0x102783d44"><binary ref="138"/></frame><frame id="165" name="_pthread_start" addr="0x7ff81783e1d3"><binary id="166" name="libsystem_pthread.dylib" UUID="3A3FA85C-F1FE-336C-BF68-924FC947ADE3" arch="x86_64" load-addr="0x7ff817838000" path="/usr/lib/system/libsystem_pthread.dylib"/></frame><frame id="167" name="thread_start" addr="0x7ff817839bd3"><binary ref="166"/></frame></backtrace><weight ref="9"/><pmc-events id="168" fmt="(55.647), (194.820)">55647 194820</pmc-events></row>
        <row><sample-time id="169" fmt="00:00.429.130">429130072</sample-time><thread ref="152"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="170"><frame ref="35"/><frame ref="36"/><frame ref="37"/><frame ref="38"/><frame ref="39"/><frame ref="40"/><frame ref="41"/><frame ref="42"/><frame ref="158"/><frame ref="159"/><frame ref="48"/><frame ref="49"/><frame ref="160"/><frame ref="161"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="171" fmt="00:00.439.131">439131832</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="172"><frame id="173" name="dyld3::MachOFile::trieWalk(Diagnostics&amp;, unsigned char const*, unsigned char const*, char const*)" addr="0x7ff817530f72"><binary ref="19"/></frame><frame id="174" name="dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const" addr="0x7ff8174fb672"><binary ref="19"/></frame><frame ref="67"/><frame ref="68"/><frame ref="69"/><frame ref="70"/><frame ref="71"/><frame ref="72"/><frame ref="73"/><frame ref="74"/><frame ref="75"/><frame id="175" name="dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator()() const" addr="0x7ff81751c59d"><binary ref="19"/></frame><frame ref="161"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="176" fmt="(5.661.582), (2.275.797)">5661582 2275797</pmc-events></row>
        <row><sample-time id="177" fmt="00:00.442.131">442131057</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="178"><frame id="179" name="invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa2a6"><binary ref="19"/></frame><frame id="180" name="dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const" addr="0x7ff81753f353"><binary ref="19"/></frame><frame id="181" name="dyld3::MachOAnalyzer::forEachRebaseLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, bool&amp;) block_pointer) const" addr="0x7ff81753f0f0"><binary ref="19"/></frame><frame id="182" name="dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa07f"><binary ref="19"/></frame><frame id="183" name="dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool) const" addr="0x7ff8174ff249"><binary ref="19"/></frame><frame ref="175"/><frame ref="161"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="184" fmt="00:00.444.128">444128910</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="185"><frame id="186" name="invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa2c7"><binary ref="19"/></frame><frame ref="180"/><frame ref="181"/><frame ref="182"/><frame ref="183"/><frame ref="175"/><frame ref="161"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="187" fmt="(4), (1.721)">4 1721</pmc-events></row>
        <row><sample-time id="188" fmt="00:00.445.129">445129222</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="185"/><weight ref="9"/><pmc-events id="189" fmt="(26.650), (25.943)">26650 25943</pmc-events></row>
        <row><sample-time id="190" fmt="00:00.448.129">448129323</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="178"/><weight ref="9"/><pmc-events id="191" fmt="(159.886), (84.446)">159886 84446</pmc-events></row>
        <row><sample-time id="192" fmt="00:00.449.133">449133614</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="193"><frame id="194" name="invocation function for block in dyld3::MachOAnalyzer::forEachRebaseLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, bool&amp;) block_pointer) const" addr="0x7ff81753f515"><binary ref="19"/></frame><frame id="195" name="dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const" addr="0x7ff81753f2d9"><binary ref="19"/></frame><frame ref="181"/><frame ref="182"/><frame ref="183"/><frame ref="175"/><frame ref="161"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="196" fmt="(35.722), (23.030)">35722 23030</pmc-events></row>
        <row><sample-time id="197" fmt="00:00.451.129">451129346</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="198"><frame ref="179"/><frame ref="195"/><frame ref="181"/><frame ref="182"/><frame ref="183"/><frame ref="175"/><frame ref="161"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="199" fmt="(96.298), (48.827)">96298 48827</pmc-events></row>
        <row><sample-time id="200" fmt="00:00.454.129">454129451</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="178"/><weight ref="9"/><pmc-events id="201" fmt="(14.435), (20.138)">14435 20138</pmc-events></row>
        <row><sample-time id="202" fmt="00:00.455.129">455129774</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="178"/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="203" fmt="00:00.457.129">457129153</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="204"><frame id="205" name="AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)" addr="0x103a79e3b"><binary ref="15"/></frame><frame id="206" name="LogOutputList::set_output_level(LogOutput*, LogLevel::type)" addr="0x10406adcf"><binary ref="15"/></frame><frame id="207" name="__cxx_global_var_init.32" addr="0x1039245bc"><binary ref="15"/></frame><frame id="208" name="invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const::$_0::operator()() const" addr="0x7ff8174fd3fb"><binary ref="19"/></frame><frame id="209" name="invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const" addr="0x7ff81753b9de"><binary ref="19"/></frame><frame id="210" name="invocation function for block in dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const" addr="0x7ff81752ff22"><binary ref="19"/></frame><frame ref="44"/><frame id="211" name="dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const" addr="0x7ff81752f0bf"><binary ref="19"/></frame><frame id="212" name="dyld3::MachOFile::forEachInitializerPointerSection(Diagnostics&amp;, void (unsigned int, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81753175e"><binary ref="19"/></frame><frame id="213" name="dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const" addr="0x7ff81753b6ea"><binary ref="19"/></frame><frame id="214" name="dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const" addr="0x7ff8174fa66c"><binary ref="19"/></frame><frame id="215" name="dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const" addr="0x7ff8174fa85a"><binary ref="19"/></frame><frame ref="115"/><frame ref="116"/><frame id="216" name="dyld4::APIs::dlopen_from(char const*, int, void*)" addr="0x7ff8175173f6"><binary ref="19"/></frame><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="217" fmt="(16), (3.297)">16 3297</pmc-events></row>
        <row><sample-time id="218" fmt="00:00.461.128">461128903</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="219"><frame ref="24"/><frame id="220" name="dyld3::ScopedTimer::startTimer()" addr="0x7ff8174df7c7"><binary ref="19"/></frame><frame id="221" name="invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const::$_0::operator()() const" addr="0x7ff8174fd3dd"><binary ref="19"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="222" fmt="(5.203), (8.146)">5203 8146</pmc-events></row>
        <row><sample-time id="223" fmt="00:00.467.128">467128922</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="224"><frame id="225" name="nanov2_malloc_zero_on_alloc" addr="0x7ff81768876f"><binary id="226" name="libsystem_malloc.dylib" UUID="6A31FB1A-ACB9-3228-AF11-BAD80316DF6D" arch="x86_64" load-addr="0x7ff81766d000" path="/usr/lib/system/libsystem_malloc.dylib"/></frame><frame id="227" name="NMTPreInitAllocation::do_alloc(unsigned long)" addr="0x1041ade82"><binary ref="15"/></frame><frame id="228" name="os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&amp;)" addr="0x1041cfda1"><binary ref="15"/></frame><frame id="229" name="AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)" addr="0x103a79e67"><binary ref="15"/></frame><frame ref="206"/><frame id="230" name="__cxx_global_var_init.86" addr="0x103b8de69"><binary ref="15"/></frame><frame ref="208"/><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="231" fmt="(993), (7.724)">993 7724</pmc-events></row>
        <row><sample-time id="232" fmt="00:00.472.141">472141371</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="233"><frame id="234" name="__cxx_global_var_init.22" addr="0x103c1d421"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="235" fmt="(1.237), (7.005)">1237 7005</pmc-events></row>
        <row><sample-time id="236" fmt="00:00.477.130">477130061</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="237"><frame ref="24"/><frame ref="25"/><frame id="238" name="invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const::$_0::operator()() const" addr="0x7ff8174fd403"><binary ref="19"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="239" fmt="(384), (2.519)">384 2519</pmc-events></row>
        <row><sample-time id="240" fmt="00:00.483.129">483129724</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="237"/><weight ref="9"/><pmc-events id="241" fmt="(3.420), (20.590)">3420 20590</pmc-events></row>
        <row><sample-time id="242" fmt="00:00.485.143">485143678</sample-time><thread ref="152"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="243"><frame id="244" name="__cxx_global_var_init.106" addr="0x103d58051"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="245" fmt="00:00.487.129">487129004</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="246"><frame id="247" name="__cxx_global_var_init.14" addr="0x103d7b0f1"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="248" fmt="(9.825), (20.990)">9825 20990</pmc-events></row>
        <row><sample-time id="249" fmt="00:00.488.128">488128667</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="237"/><weight ref="9"/><pmc-events id="250" fmt="(6.750), (12.412)">6750 12412</pmc-events></row>
        <row><sample-time id="251" fmt="00:00.492.130">492130008</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="252"><frame id="253" name="__cxx_global_var_init.22" addr="0x103df9e31"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="254" fmt="00:00.496.128">496128915</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="237"/><weight ref="9"/><pmc-events id="255" fmt="(538), (2.449)">538 2449</pmc-events></row>
        <row><sample-time id="256" fmt="00:00.502.128">502128824</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="257"><frame id="258" name="_GLOBAL__sub_I_jvmciCodeInstaller.cpp" addr="0x103f05000"><binary ref="15"/></frame><frame ref="208"/><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="259" fmt="(2.697), (8.269)">2697 8269</pmc-events></row>
        <row><sample-time id="260" fmt="00:00.505.128">505128973</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="261"><frame id="262" name="__cxx_global_var_init.37" addr="0x103fffbe1"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="263" fmt="(1.237), (3.712)">1237 3712</pmc-events></row>
        <row><sample-time id="264" fmt="00:00.507.129">507129242</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="265"><frame id="266" name="__cxx_global_var_init.30" addr="0x10402f0c1"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="267" fmt="(3.685), (23.676)">3685 23676</pmc-events></row>
        <row><sample-time id="268" fmt="00:00.514.151">514151791</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="269"><frame id="270" name="__cxx_global_var_init.5" addr="0x104167461"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="271" fmt="(1.237), (5.665)">1237 5665</pmc-events></row>
        <row><sample-time id="272" fmt="00:00.515.129">515129410</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="273"><frame id="274" name="ReservedSpace::ReservedSpace()" addr="0x10443cb11"><binary ref="15"/></frame><frame ref="208"/><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="275" fmt="(3.308), (11.147)">3308 11147</pmc-events></row>
        <row><sample-time id="276" fmt="00:00.517.134">517134308</sample-time><thread ref="152"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="277"><frame id="278" name="__cxx_global_var_init.23" addr="0x10418e9e1"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="279" fmt="00:00.520.130">520130602</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="219"/><weight ref="9"/><pmc-events id="280" fmt="(2.592), (12.993)">2592 12993</pmc-events></row>
        <row><sample-time id="281" fmt="00:00.528.128">528128972</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="282"><frame id="283" name="__cxx_global_var_init.4" addr="0x1042690e1"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="284" fmt="00:00.533.129">533129008</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="219"/><weight ref="9"/><pmc-events id="285" fmt="(384), (1.758)">384 1758</pmc-events></row>
        <row><sample-time id="286" fmt="00:00.537.129">537129195</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="237"/><weight ref="9"/><pmc-events id="287" fmt="(1.362), (6.045)">1362 6045</pmc-events></row>
        <row><sample-time id="288" fmt="00:00.540.129">540129069</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="219"/><weight ref="9"/><pmc-events id="289" fmt="(1.620), (3.552)">1620 3552</pmc-events></row>
        <row><sample-time id="290" fmt="00:00.547.131">547131454</sample-time><thread ref="152"/><process ref="4"/><core id="291" fmt="CPU 3 (SMT Core)">3</core><thread-state ref="8"/><backtrace id="292"><frame id="293" name="__cxx_global_var_init.10" addr="0x1044a38b1"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="294" fmt="(3.879), (20.260)">3879 20260</pmc-events></row>
        <row><sample-time id="295" fmt="00:00.548.131">548131898</sample-time><thread ref="152"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="296"><frame id="297" name="__cxx_global_var_init.22" addr="0x1044a9871"><binary ref="15"/></frame><frame ref="209"/><frame ref="210"/><frame ref="44"/><frame ref="211"/><frame ref="212"/><frame ref="213"/><frame ref="214"/><frame ref="215"/><frame ref="115"/><frame ref="116"/><frame ref="216"/><frame ref="162"/><frame ref="163"/><frame ref="149"/><frame ref="164"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="298" fmt="00:00.549.129">549129100</sample-time><thread ref="152"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="219"/><weight ref="9"/><pmc-events id="299" fmt="(2.596), (12.735)">2596 12735</pmc-events></row>
        <row><sample-time id="300" fmt="00:00.550.129">550129478</sample-time><thread id="301" fmt="ThreadJavaMain  0x6c58b (java, pid: 13748)"><tid id="302" fmt="0x6c58b">443787</tid><process ref="4"/></thread><process ref="4"/><core id="303" fmt="CPU 1 (SMT Core)">1</core><thread-state ref="8"/><backtrace id="304"><frame id="305" name="ostream_init()" addr="0x1041df9d1"><binary ref="15"/></frame><frame id="306" name="JNI_CreateJavaVM" addr="0x103eb9f45"><binary ref="15"/></frame><frame id="307" name="JavaMain" addr="0x1027804e2"><binary ref="138"/></frame><frame id="308" name="ThreadJavaMain" addr="0x102783629"><binary ref="138"/></frame><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="309" fmt="(324), (9.411)">324 9411</pmc-events></row>
        <row><sample-time id="310" fmt="00:00.553.129">553129015</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="311"><frame id="312" name="dyld3::MachOLoaded::findClosestSymbol(unsigned long long, char const**, unsigned long long*) const" addr="0x7ff817534971"><binary ref="19"/></frame><frame id="313" name="dyld4::APIs::dladdr(void const*, dl_info*)" addr="0x7ff817516a38"><binary ref="19"/></frame><frame id="314" name="os::jvm_path(char*, int)" addr="0x1041d3b84"><binary ref="15"/></frame><frame id="315" name="os::init_system_properties_values()" addr="0x1041d3921"><binary ref="15"/></frame><frame id="316" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d0298"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="317" fmt="(3.841), (3.361)">3841 3361</pmc-events></row>
        <row><sample-time id="318" fmt="00:00.555.128">555128765</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="319" fmt="(11.523), (9.079)">11523 9079</pmc-events></row>
        <row><sample-time id="320" fmt="00:00.557.129">557129132</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="321" fmt="(15.364), (18.071)">15364 18071</pmc-events></row>
        <row><sample-time id="322" fmt="00:00.558.129">558129153</sample-time><thread ref="301"/><process ref="4"/><core ref="291"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="323" fmt="00:00.559.129">559129395</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="324" fmt="(19.205), (14.985)">19205 14985</pmc-events></row>
        <row><sample-time id="325" fmt="00:00.561.128">561128969</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="326" fmt="(26.118), (17.290)">26118 17290</pmc-events></row>
        <row><sample-time id="327" fmt="00:00.562.128">562128926</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="328" fmt="(20.395), (14.924)">20395 14924</pmc-events></row>
        <row><sample-time id="329" fmt="00:00.563.165">563165173</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="330" fmt="(24.584), (19.616)">24584 19616</pmc-events></row>
        <row><sample-time id="331" fmt="00:00.564.128">564128891</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace ref="311"/><weight ref="9"/><pmc-events id="332" fmt="(73.752), (56.437)">73752 56437</pmc-events></row>
        <row><sample-time id="333" fmt="00:00.566.129">566129428</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="334"><frame id="335" name="fstat$INODE64" addr="0x7ff8177ffd7f"><binary ref="146"/></frame><frame id="336" name="tzparse" addr="0x7ff8176ee477"><binary ref="122"/></frame><frame id="337" name="tzload" addr="0x7ff8176ee18a"><binary ref="122"/></frame><frame id="338" name="tzsetwall_basic" addr="0x7ff8176ed952"><binary ref="122"/></frame><frame id="339" name="localtime_r" addr="0x7ff8176ed588"><binary ref="122"/></frame><frame id="340" name="LogFileOutput::set_file_name_parameters(long)" addr="0x10406766f"><binary ref="15"/></frame><frame id="341" name="LogConfiguration::initialize(long)" addr="0x1040642e9"><binary ref="15"/></frame><frame id="342" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d02ae"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="343" fmt="(30.850), (46.790)">30850 46790</pmc-events></row>
        <row><sample-time id="344" fmt="00:00.568.129">568129257</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="345"><frame ref="35"/><frame ref="36"/><frame ref="37"/><frame ref="38"/><frame ref="39"/><frame ref="40"/><frame ref="41"/><frame ref="42"/><frame ref="158"/><frame ref="159"/><frame ref="48"/><frame ref="49"/><frame ref="160"/><frame ref="161"/><frame id="346" name="os::dll_load(char const*, char*, int)" addr="0x1041d4e4f"><binary ref="15"/></frame><frame id="347" name="ClassLoader::load_jimage_library()" addr="0x103c13743"><binary ref="15"/></frame><frame id="348" name="ClassLoader::lookup_vm_options()" addr="0x103c15363"><binary ref="15"/></frame><frame id="349" name="Arguments::parse(JavaVMInitArgs const*)" addr="0x103a8cdc0"><binary ref="15"/></frame><frame id="350" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d02b6"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="351" fmt="00:00.577.129">577129258</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="352"><frame id="353" name="outputStream::print_cr(char const*, ...)" addr="0x1041dcffd"><binary ref="15"/></frame><frame id="354" name="metaspace::Settings::ergo_initialize()" addr="0x10416eda8"><binary ref="15"/></frame><frame id="355" name="Metaspace::ergo_initialize()" addr="0x10416a44f"><binary ref="15"/></frame><frame id="356" name="Arguments::apply_ergo()" addr="0x103a8d346"><binary ref="15"/></frame><frame id="357" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d02d0"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="358" fmt="(1.817), (13.187)">1817 13187</pmc-events></row>
        <row><sample-time id="359" fmt="00:00.581.129">581129686</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="360"><frame id="361" name="_platform_strlen" addr="0x7ff817868f41"><binary id="362" name="libsystem_platform.dylib" UUID="F1798256-C6B5-335C-BBB5-7978ACF41DEB" arch="x86_64" load-addr="0x7ff817868000" path="/usr/lib/system/libsystem_platform.dylib"/></frame><frame id="363" name="copy_user_r" addr="0x7ff817876b75"><binary id="364" name="libsystem_info.dylib" UUID="16694AFC-0A11-3BEE-B3B6-84C718DBD550" arch="x86_64" load-addr="0x7ff817872000" path="/usr/lib/system/libsystem_info.dylib"/></frame><frame id="365" name="getpwuid_r" addr="0x7ff817876922"><binary ref="364"/></frame><frame id="366" name="PerfMemory::create_memory_region(unsigned long)" addr="0x10420c641"><binary ref="15"/></frame><frame id="367" name="PerfMemory::initialize()" addr="0x10420c190"><binary ref="15"/></frame><frame id="368" name="vm_init_globals()" addr="0x103e1f157"><binary ref="15"/></frame><frame id="369" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d03a5"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="370" fmt="(32.963), (74.512)">32963 74512</pmc-events></row>
        <row><sample-time id="371" fmt="00:00.582.129">582129805</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="372"><frame id="373" name="close" addr="0x7ff8177fffd7"><binary ref="146"/></frame><frame ref="367"/><frame ref="368"/><frame ref="369"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="374" fmt="(36.850), (123.161)">36850 123161</pmc-events></row>
        <row><sample-time id="375" fmt="00:00.583.129">583129026</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="376"><frame id="377" name="JMXStartRemoteDCmd::JMXStartRemoteDCmd(outputStream*, bool)" addr="0x103cedffc"><binary ref="15"/></frame><frame id="378" name="int DCmdFactoryImpl&lt;JMXStartRemoteDCmd&gt;::get_num_arguments&lt;JMXStartRemoteDCmd, 0&gt;()" addr="0x103cf404b"><binary ref="15"/></frame><frame id="379" name="DCmdRegistrant::register_dcmds()" addr="0x103cebb1c"><binary ref="15"/></frame><frame id="380" name="Management::init()" addr="0x104134752"><binary ref="15"/></frame><frame id="381" name="management_init()" addr="0x104134669"><binary ref="15"/></frame><frame id="382" name="init_globals()" addr="0x103e1f16b"><binary ref="15"/></frame><frame id="383" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d05b5"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="384" fmt="(28.940), (79.223)">28940 79223</pmc-events></row>
        <row><sample-time id="385" fmt="00:00.585.129">585129139</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="386"><frame ref="35"/><frame ref="36"/><frame ref="37"/><frame ref="38"/><frame ref="39"/><frame ref="40"/><frame ref="41"/><frame ref="42"/><frame ref="158"/><frame ref="159"/><frame ref="48"/><frame ref="49"/><frame ref="160"/><frame ref="161"/><frame ref="346"/><frame id="387" name="os::native_java_library()" addr="0x1041cf996"><binary ref="15"/></frame><frame id="388" name="ClassLoader::load_java_library()" addr="0x103c12cd1"><binary ref="15"/></frame><frame id="389" name="ClassLoader::initialize(JavaThread*)" addr="0x103c15292"><binary ref="15"/></frame><frame id="390" name="classLoader_init1()" addr="0x103c1568b"><binary ref="15"/></frame><frame id="391" name="init_globals()" addr="0x103e1f17a"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="392" fmt="00:00.592.130">592130341</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="393"><frame id="394" name="JDK_Canonicalize" addr="0x10283a881"><binary id="395" name="libjava.dylib" UUID="B5EF1A5F-95C2-36FF-9C61-AEBE7365B6B4" arch="x86_64" load-addr="0x102831000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/libjava.dylib"/></frame><frame id="396" name="ClassLoader::setup_bootstrap_search_path_impl(JavaThread*, char const*)" addr="0x103c116a2"><binary ref="15"/></frame><frame ref="390"/><frame ref="391"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="397" fmt="(1.146), (23.835)">1146 23835</pmc-events></row>
        <row><sample-time id="398" fmt="00:00.596.129">596129635</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="399"><frame id="400" name="MacroAssembler::decrementl(RegisterImpl*, int)" addr="0x1040d7d81"><binary ref="15"/></frame><frame id="401" name="AbstractICache::initialize()" addr="0x103e1042e"><binary ref="15"/></frame><frame id="402" name="CodeCache::initialize()" addr="0x103c30ff8"><binary ref="15"/></frame><frame id="403" name="init_globals()" addr="0x103e1f184"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="404" fmt="(35), (8.883)">35 8883</pmc-events></row>
        <row><sample-time id="405" fmt="00:00.599.129">599129881</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="406"><frame id="407" name="StubGenerator::generate_call_stub(unsigned char*&amp;)" addr="0x104359ffb"><binary ref="15"/></frame><frame id="408" name="StubGenerator::generate_initial()" addr="0x104337852"><binary ref="15"/></frame><frame id="409" name="StubGenerator_generate(CodeBuffer*, bool)" addr="0x1043360c6"><binary ref="15"/></frame><frame id="410" name="StubRoutines::initialize1()" addr="0x10435ddcf"><binary ref="15"/></frame><frame id="411" name="init_globals()" addr="0x103e1f18e"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="412" fmt="(2.525), (48.261)">2525 48261</pmc-events></row>
        <row><sample-time id="413" fmt="00:00.600.129">600129745</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="414"><frame id="415" name="Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)" addr="0x103a949e7"><binary ref="15"/></frame><frame id="416" name="Relocation::pd_set_data_value(unsigned char*, long, bool)" addr="0x10425473f"><binary ref="15"/></frame><frame id="417" name="CodeBuffer::relocate_code_to(CodeBuffer*) const" addr="0x103c2d632"><binary ref="15"/></frame><frame id="418" name="CodeBuffer::copy_code_to(CodeBlob*)" addr="0x103c2d204"><binary ref="15"/></frame><frame id="419" name="RuntimeStub::new_runtime_stub(char const*, CodeBuffer*, int, int, OopMapSet*, bool)" addr="0x103c2949a"><binary ref="15"/></frame><frame id="420" name="StubGenerator::generate_throw_exception(char const*, unsigned char*, RegisterImpl*, RegisterImpl*)" addr="0x104338815"><binary ref="15"/></frame><frame id="421" name="StubGenerator::generate_initial()" addr="0x104337b6b"><binary ref="15"/></frame><frame ref="409"/><frame ref="410"/><frame ref="411"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="422" fmt="(21.340), (151.701)">21340 151701</pmc-events></row>
        <row><sample-time id="423" fmt="00:00.604.130">604130490</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="424"><frame id="425" name="_kernelrpc_mach_vm_map_trap" addr="0x7ff8177ff45b"><binary ref="146"/></frame><frame id="426" name="mvm_allocate_pages" addr="0x7ff8176784c8"><binary ref="226"/></frame><frame id="427" name="large_malloc" addr="0x7ff817678f7c"><binary ref="226"/></frame><frame id="428" name="szone_malloc_should_clear" addr="0x7ff81766f0bd"><binary ref="226"/></frame><frame id="429" name="os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&amp;)" addr="0x1041cfe31"><binary ref="15"/></frame><frame ref="229"/><frame id="430" name="G1CollectedHeap::G1CollectedHeap()" addr="0x103d41fc7"><binary ref="15"/></frame><frame id="431" name="G1Arguments::create_heap()" addr="0x103d3261b"><binary ref="15"/></frame><frame id="432" name="universe_init()" addr="0x1043fc611"><binary ref="15"/></frame><frame id="433" name="init_globals()" addr="0x103e1f193"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="434" fmt="(127.085), (247.972)">127085 247972</pmc-events></row>
        <row><sample-time id="435" fmt="00:00.606.130">606130173</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="436"><frame id="437" name="_platform_bzero$VARIANT$Haswell" addr="0x7ff817868e8a"><binary ref="362"/></frame><frame id="438" name="CardTable::clear(MemRegion)" addr="0x103bb91a9"><binary ref="15"/></frame><frame id="439" name="HeapRegionManager::commit_regions(unsigned int, unsigned long, WorkGang*)" addr="0x103e04937"><binary ref="15"/></frame><frame id="440" name="HeapRegionManager::expand(unsigned int, unsigned int, WorkGang*)" addr="0x103e04731"><binary ref="15"/></frame><frame id="441" name="HeapRegionManager::expand_by(unsigned int, WorkGang*)" addr="0x103e05278"><binary ref="15"/></frame><frame id="442" name="G1CollectedHeap::expand(unsigned long, WorkGang*, double*)" addr="0x103d41141"><binary ref="15"/></frame><frame id="443" name="G1CollectedHeap::initialize()" addr="0x103d42ca7"><binary ref="15"/></frame><frame id="444" name="universe_init()" addr="0x1043fc649"><binary ref="15"/></frame><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="445" fmt="(79.765), (159.451)">79765 159451</pmc-events></row>
        <row><sample-time id="446" fmt="00:00.607.129">607129520</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="447"><frame id="448" name="nanov2_malloc_zero_on_alloc" addr="0x7ff81768873b"><binary ref="226"/></frame><frame ref="429"/><frame ref="229"/><frame id="449" name="os::PlatformMonitor::PlatformMonitor()" addr="0x1041dc1ec"><binary ref="15"/></frame><frame id="450" name="Mutex::Mutex(int, char const*, bool, Mutex::SafepointCheckRequired)" addr="0x10419fdfd"><binary ref="15"/></frame><frame id="451" name="GCMemoryManager::GCMemoryManager(char const*)" addr="0x104165a04"><binary ref="15"/></frame><frame id="452" name="G1MonitoringSupport::G1MonitoringSupport(G1CollectedHeap*)" addr="0x103d7dd87"><binary ref="15"/></frame><frame id="453" name="G1CollectedHeap::initialize()" addr="0x103d42e09"><binary ref="15"/></frame><frame ref="444"/><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="454" fmt="(9.521), (37.709)">9521 37709</pmc-events></row>
        <row><sample-time id="455" fmt="00:00.609.129">609129817</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="456"><frame id="457" name="SharedDataRelocator::do_bit(unsigned long)" addr="0x103d2041d"><binary ref="15"/></frame><frame id="458" name="FileMapInfo::relocate_pointers_in_core_regions(long)" addr="0x103d24fdf"><binary ref="15"/></frame><frame id="459" name="FileMapInfo::map_regions(int*, int, char*, ReservedSpace)" addr="0x103d24c68"><binary ref="15"/></frame><frame id="460" name="MetaspaceShared::map_archive(FileMapInfo*, char*, ReservedSpace)" addr="0x104171a92"><binary ref="15"/></frame><frame id="461" name="MetaspaceShared::map_archives(FileMapInfo*, FileMapInfo*, bool)" addr="0x1041713bb"><binary ref="15"/></frame><frame id="462" name="MetaspaceShared::initialize_runtime_shared_and_meta_spaces()" addr="0x104170f9b"><binary ref="15"/></frame><frame id="463" name="Metaspace::global_initialize()" addr="0x10416a624"><binary ref="15"/></frame><frame id="464" name="universe_init()" addr="0x1043fc683"><binary ref="15"/></frame><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="465" fmt="(23), (5.313)">23 5313</pmc-events></row>
        <row><sample-time id="466" fmt="00:00.612.130">612130019</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="467" fmt="(9.119), (11.698)">9119 11698</pmc-events></row>
        <row><sample-time id="468" fmt="00:00.616.147">616147030</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="469" fmt="00:00.617.129">617129880</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="470" fmt="(6.599), (6.362)">6599 6362</pmc-events></row>
        <row><sample-time id="471" fmt="00:00.620.129">620129017</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="472" fmt="(5.495), (4.088)">5495 4088</pmc-events></row>
        <row><sample-time id="473" fmt="00:00.624.129">624129275</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="474" fmt="(18.789), (14.694)">18789 14694</pmc-events></row>
        <row><sample-time id="475" fmt="00:00.625.129">625129015</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="476" fmt="(15.394), (13.418)">15394 13418</pmc-events></row>
        <row><sample-time id="477" fmt="00:00.626.129">626129644</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="478"><frame id="479" name="SharedDataRelocator::do_bit(unsigned long)" addr="0x103d20421"><binary ref="15"/></frame><frame ref="458"/><frame ref="459"/><frame ref="460"/><frame ref="461"/><frame ref="462"/><frame ref="463"/><frame ref="464"/><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="480" fmt="(22.786), (20.310)">22786 20310</pmc-events></row>
        <row><sample-time id="481" fmt="00:00.628.129">628129355</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="482" fmt="(16.844), (17.045)">16844 17045</pmc-events></row>
        <row><sample-time id="483" fmt="00:00.631.129">631129079</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="484" fmt="(3.867), (7.478)">3867 7478</pmc-events></row>
        <row><sample-time id="485" fmt="00:00.633.128">633128986</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="486" fmt="(4.400), (8.341)">4400 8341</pmc-events></row>
        <row><sample-time id="487" fmt="00:00.635.129">635129273</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="488" fmt="(4.643), (6.864)">4643 6864</pmc-events></row>
        <row><sample-time id="489" fmt="00:00.639.129">639129164</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="490" fmt="(17.828), (9.265)">17828 9265</pmc-events></row>
        <row><sample-time id="491" fmt="00:00.641.129">641129043</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="492" fmt="(16.840), (11.475)">16840 11475</pmc-events></row>
        <row><sample-time id="493" fmt="00:00.642.128">642128909</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="494" fmt="00:00.645.129">645129131</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="495" fmt="(7.473), (10.150)">7473 10150</pmc-events></row>
        <row><sample-time id="496" fmt="00:00.660.129">660129160</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="497" fmt="(27.844), (21.450)">27844 21450</pmc-events></row>
        <row><sample-time id="498" fmt="00:00.667.129">667129056</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="499" fmt="(1.642), (5.803)">1642 5803</pmc-events></row>
        <row><sample-time id="500" fmt="00:00.670.129">670129666</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events id="501" fmt="(323), (2.212)">323 2212</pmc-events></row>
        <row><sample-time id="502" fmt="00:00.673.129">673129967</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="456"/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="503" fmt="00:00.681.129">681129462</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="504"><frame id="505" name="__mmap" addr="0x7ff8178000b3"><binary ref="146"/></frame><frame id="506" name="os::pd_map_memory(int, char const*, unsigned long, char*, unsigned long, bool, bool)" addr="0x1041d6936"><binary ref="15"/></frame><frame id="507" name="os::map_memory(int, char const*, unsigned long, char*, unsigned long, bool, bool, MEMFLAGS)" addr="0x1041d2c10"><binary ref="15"/></frame><frame id="508" name="FileMapInfo::map_heap_data(MemRegion**, int, int, int*, bool)" addr="0x103d25dd4"><binary ref="15"/></frame><frame id="509" name="FileMapInfo::map_heap_regions_impl()" addr="0x103d25a58"><binary ref="15"/></frame><frame id="510" name="FileMapInfo::map_heap_regions()" addr="0x103d25f47"><binary ref="15"/></frame><frame id="511" name="MetaspaceShared::map_archives(FileMapInfo*, FileMapInfo*, bool)" addr="0x10417159a"><binary ref="15"/></frame><frame ref="462"/><frame ref="463"/><frame ref="464"/><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="512" fmt="(12.166), (99.334)">12166 99334</pmc-events></row>
        <row><sample-time id="513" fmt="00:00.685.128">685128865</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="514"><frame id="515" name="_platform_bzero$VARIANT$Haswell" addr="0x7ff817868e6b"><binary ref="362"/></frame><frame id="516" name="nanov2_malloc_zero_on_alloc" addr="0x7ff817688960"><binary ref="226"/></frame><frame ref="429"/><frame id="517" name="ResourceObj::operator new(unsigned long, ResourceObj::allocation_type, MEMFLAGS)" addr="0x103a7a1de"><binary ref="15"/></frame><frame id="518" name="ModuleEntry::restore_growable_array(Array&lt;ModuleEntry*&gt;*)" addr="0x104190532"><binary ref="15"/></frame><frame id="519" name="PackageEntryTable::load_archived_entries(Array&lt;PackageEntry*&gt;*)" addr="0x1041e952e"><binary ref="15"/></frame><frame id="520" name="ClassLoaderDataShared::serialize(SerializeClosure*)" addr="0x103c1bf63"><binary ref="15"/></frame><frame id="521" name="MetaspaceShared::serialize(SerializeClosure*)" addr="0x10416f977"><binary ref="15"/></frame><frame id="522" name="MetaspaceShared::initialize_shared_spaces()" addr="0x104171c82"><binary ref="15"/></frame><frame id="523" name="universe_init()" addr="0x1043fc7a5"><binary ref="15"/></frame><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="524" fmt="(454), (9.248)">454 9248</pmc-events></row>
        <row><sample-time id="525" fmt="00:00.693.129">693129361</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="526"><frame id="527" name="PatchEmbeddedPointers::do_bit(unsigned long)" addr="0x103e0da59"><binary ref="15"/></frame><frame id="528" name="HeapShared::patch_archived_heap_embedded_pointers(MemRegion, unsigned char*, unsigned long)" addr="0x103e0d2ab"><binary ref="15"/></frame><frame id="529" name="FileMapInfo::patch_archived_heap_embedded_pointers()" addr="0x103d26062"><binary ref="15"/></frame><frame id="530" name="MetaspaceShared::initialize_shared_spaces()" addr="0x104171c8f"><binary ref="15"/></frame><frame ref="523"/><frame ref="433"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="531" fmt="(12.430), (16.408)">12430 16408</pmc-events></row>
        <row><sample-time id="532" fmt="00:00.695.129">695129070</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace ref="526"/><weight ref="9"/><pmc-events id="533" fmt="(16.478), (25.130)">16478 25130</pmc-events></row>
        <row><sample-time id="534" fmt="00:00.697.129">697129104</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="535"><frame id="536" name="RegisterSaver::save_live_registers(MacroAssembler*, int, int*, bool)" addr="0x104278c71"><binary ref="15"/></frame><frame id="537" name="SharedRuntime::generate_stubs()" addr="0x10426d899"><binary ref="15"/></frame><frame id="538" name="init_globals()" addr="0x103e1f1c0"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="539" fmt="00:00.698.128">698128981</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="540"><frame id="541" name="_qsort" addr="0x7ff817715d47"><binary ref="122"/></frame><frame id="542" name="_qsort" addr="0x7ff81771616c"><binary ref="122"/></frame><frame ref="542"/><frame ref="542"/><frame id="543" name="Universe::genesis(JavaThread*)" addr="0x1043fa9fc"><binary ref="15"/></frame><frame id="544" name="universe2_init()" addr="0x1043fd08b"><binary ref="15"/></frame><frame id="545" name="init_globals()" addr="0x103e1f1c5"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="546" fmt="(76.801), (41.342)">76801 41342</pmc-events></row>
        <row><sample-time id="547" fmt="00:00.700.129">700129262</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="548"><frame id="549" name="void CompactHashtable&lt;Symbol*, RunTimeSharedClassInfo const*, &amp;RunTimeSharedClassInfo const* read_value_from_compact_hashtable&lt;RunTimeSharedClassInfo const*&gt;(unsigned char*, unsigned int), &amp;RunTimeSharedClassInfo::EQUALS(RunTimeSharedClassInfo const*, Symbol*, int)&gt;::iterate&lt;ArchivedMirrorPatcher&gt;(RunTimeSharedClassInfo const**) const" addr="0x104395664"><binary ref="15"/></frame><frame id="550" name="SystemDictionaryShared::update_archived_mirror_native_pointers()" addr="0x10439584e"><binary ref="15"/></frame><frame id="551" name="vmClasses::resolve_all(JavaThread*)" addr="0x10443f166"><binary ref="15"/></frame><frame id="552" name="SystemDictionary::initialize(JavaThread*)" addr="0x10438b2a4"><binary ref="15"/></frame><frame id="553" name="Universe::genesis(JavaThread*)" addr="0x1043faa04"><binary ref="15"/></frame><frame ref="544"/><frame ref="545"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="554" fmt="(133.180), (125.165)">133180 125165</pmc-events></row>
        <row><sample-time id="555" fmt="00:00.702.129">702129294</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="556"><frame id="557" name="ConstantPool::restore_unshareable_info(JavaThread*)" addr="0x103c75f68"><binary ref="15"/></frame><frame id="558" name="InstanceKlass::restore_unshareable_info(ClassLoaderData*, Handle, PackageEntry*, JavaThread*)" addr="0x103e26c96"><binary ref="15"/></frame><frame id="559" name="vmClasses::resolve_shared_class(InstanceKlass*, ClassLoaderData*, Handle, JavaThread*)" addr="0x10443ef0d"><binary ref="15"/></frame><frame id="560" name="vmClasses::resolve_shared_class(InstanceKlass*, ClassLoaderData*, Handle, JavaThread*)" addr="0x10443eede"><binary ref="15"/></frame><frame ref="560"/><frame id="561" name="vmClasses::resolve_shared_class(InstanceKlass*, ClassLoaderData*, Handle, JavaThread*)" addr="0x10443ef7d"><binary ref="15"/></frame><frame ref="561"/><frame id="562" name="vmClasses::resolve_all(JavaThread*)" addr="0x10443f761"><binary ref="15"/></frame><frame ref="552"/><frame ref="553"/><frame ref="544"/><frame ref="545"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="563" fmt="(180.594), (296.012)">180594 296012</pmc-events></row>
        <row><sample-time id="564" fmt="00:00.703.140">703140396</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="565"><frame id="566" name="ObjectLocker::ObjectLocker(Handle, JavaThread*)" addr="0x104384991"><binary ref="15"/></frame><frame id="567" name="HeapShared::resolve_or_init_classes_for_subgraph_of(Klass*, bool, JavaThread*)" addr="0x103e0b481"><binary ref="15"/></frame><frame id="568" name="HeapShared::resolve_classes_for_subgraphs(ArchivableStaticFieldInfo*, int, JavaThread*)" addr="0x103e0b1b0"><binary ref="15"/></frame><frame id="569" name="HeapShared::resolve_classes(JavaThread*)" addr="0x103e0b0f0"><binary ref="15"/></frame><frame ref="553"/><frame ref="544"/><frame ref="545"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="570" fmt="(1), (598)">1 598</pmc-events></row>
        <row><sample-time id="571" fmt="00:00.704.129">704129278</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="572"><frame id="573" name="TemplateTable::initialize()" addr="0x1043a9001"><binary ref="15"/></frame><frame id="574" name="interpreter_init_code()" addr="0x103e38bfb"><binary ref="15"/></frame><frame id="575" name="init_globals()" addr="0x103e1f1cf"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="576" fmt="(10.546), (22.268)">10546 22268</pmc-events></row>
        <row><sample-time id="577" fmt="00:00.706.129">706129075</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="578"><frame id="579" name="Assembler::emit_compressed_disp_byte(int&amp;)" addr="0x103a943d5"><binary ref="15"/></frame><frame id="580" name="Assembler::emit_operand_helper(int, int, int, Address::ScaleFactor, int, RelocationHolder const&amp;, int)" addr="0x103a947f2"><binary ref="15"/></frame><frame id="581" name="Assembler::movzbl(RegisterImpl*, Address)" addr="0x103aa3040"><binary ref="15"/></frame><frame id="582" name="MacroAssembler::load_unsigned_byte(RegisterImpl*, Address)" addr="0x1040d9a92"><binary ref="15"/></frame><frame id="583" name="InterpreterMacroAssembler::dispatch_epilog(TosState, int)" addr="0x103e32ccc"><binary ref="15"/></frame><frame id="584" name="TemplateInterpreterGenerator::set_vtos_entry_points(Template*, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;, unsigned char*&amp;)" addr="0x1043a5267"><binary ref="15"/></frame><frame id="585" name="TemplateInterpreterGenerator::set_entry_points(Bytecodes::Code)" addr="0x10439b78b"><binary ref="15"/></frame><frame id="586" name="TemplateInterpreterGenerator::generate_all()" addr="0x10439acc0"><binary ref="15"/></frame><frame id="587" name="TemplateInterpreter::initialize_code()" addr="0x10439881d"><binary ref="15"/></frame><frame ref="574"/><frame ref="575"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="588" fmt="(122.289), (125.957)">122289 125957</pmc-events></row>
        <row><sample-time id="589" fmt="00:00.707.129">707129023</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="590"><frame id="591" name="TemplateTable::_return(TosState)" addr="0x1043bc286"><binary ref="15"/></frame><frame id="592" name="Template::generate(InterpreterMacroAssembler*)" addr="0x1043a8c60"><binary ref="15"/></frame><frame id="593" name="TemplateInterpreterGenerator::generate_and_dispatch(Template*, TosState)" addr="0x10439bd5d"><binary ref="15"/></frame><frame ref="585"/><frame ref="586"/><frame ref="587"/><frame ref="574"/><frame ref="575"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="594" fmt="(331.087), (249.950)">331087 249950</pmc-events></row>
        <row><sample-time id="595" fmt="00:00.709.129">709129326</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="596"><frame id="597" name="0x113a1508c" addr="0x113a1508c"/><frame ref="418"/><frame id="598" name="AdapterBlob::create(CodeBuffer*)" addr="0x103c28ddc"><binary ref="15"/></frame><frame id="599" name="AdapterHandlerLibrary::create_adapter(AdapterBlob*&amp;, int, BasicType*, bool)" addr="0x104273698"><binary ref="15"/></frame><frame id="600" name="AdapterHandlerLibrary::get_adapter(methodHandle const&amp;)" addr="0x104273d19"><binary ref="15"/></frame><frame id="601" name="Method::link_method(methodHandle const&amp;, JavaThread*)" addr="0x1041784f2"><binary ref="15"/></frame><frame id="602" name="InstanceKlass::link_class_impl(JavaThread*)" addr="0x103e21815"><binary ref="15"/></frame><frame id="603" name="InstanceKlass::link_class_or_fail(JavaThread*)" addr="0x103e2252c"><binary ref="15"/></frame><frame id="604" name="initialize_known_method(LatestMethodCache*, InstanceKlass*, char const*, Symbol*, bool, JavaThread*)" addr="0x1043fcdec"><binary ref="15"/></frame><frame id="605" name="Universe::initialize_known_methods(JavaThread*)" addr="0x1043fcfca"><binary ref="15"/></frame><frame id="606" name="universe_post_init()" addr="0x1043fd4dc"><binary ref="15"/></frame><frame id="607" name="init_globals()" addr="0x103e1f21b"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="608" fmt="(355.085), (411.527)">355085 411527</pmc-events></row>
        <row><sample-time id="609" fmt="00:00.710.129">710129540</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="610"><frame id="611" name="0x113a1509a" addr="0x113a1509a"/><frame id="612" name="StubCodeMark::~StubCodeMark()" addr="0x104335f65"><binary ref="15"/></frame><frame id="613" name="StubGenerator::generate_conjoint_long_oop_copy(bool, bool, unsigned char*, unsigned char**, char const*, bool)" addr="0x104353d31"><binary ref="15"/></frame><frame id="614" name="StubGenerator::generate_arraycopy_stubs()" addr="0x104338edf"><binary ref="15"/></frame><frame id="615" name="StubGenerator::generate_all()" addr="0x10433659f"><binary ref="15"/></frame><frame id="616" name="StubGenerator_generate(CodeBuffer*, bool)" addr="0x1043360bf"><binary ref="15"/></frame><frame id="617" name="StubRoutines::initialize2()" addr="0x10435df02"><binary ref="15"/></frame><frame id="618" name="init_globals()" addr="0x103e1f224"><binary ref="15"/></frame><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="619" fmt="(41.837), (77.172)">41837 77172</pmc-events></row>
        <row><sample-time id="620" fmt="00:00.712.130">712130400</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="621"><frame id="622" name="0x113a1508f" addr="0x113a1508f"/><frame ref="612"/><frame id="623" name="StubGenerator::generate_squareToLen()" addr="0x10434e59e"><binary ref="15"/></frame><frame id="624" name="StubGenerator::generate_all()" addr="0x104336fd1"><binary ref="15"/></frame><frame ref="616"/><frame ref="617"/><frame ref="618"/><frame ref="383"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="625" fmt="(53.764), (151.143)">53764 151143</pmc-events></row>
        <row><sample-time id="626" fmt="00:00.713.144">713144186</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="627"><frame id="628" name="InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)" addr="0x103e3ed21"><binary ref="15"/></frame><frame id="629" name="0x113a15cc9" addr="0x113a15cc9"/><frame id="630" name="JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, JavaThread*)" addr="0x103e455a6"><binary ref="15"/></frame><frame id="631" name="InstanceKlass::call_class_initializer(JavaThread*)" addr="0x103e22fa4"><binary ref="15"/></frame><frame id="632" name="InstanceKlass::initialize_impl(JavaThread*)" addr="0x103e21fc6"><binary ref="15"/></frame><frame id="633" name="Threads::initialize_java_lang_classes(JavaThread*, JavaThread*)" addr="0x1043cf556"><binary ref="15"/></frame><frame id="634" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d079c"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="635" fmt="(20), (3.044)">20 3044</pmc-events></row>
        <row><sample-time id="636" fmt="00:00.715.129">715129449</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="637"><frame id="638" name="JVM_IsCDSDumpingEnabled" addr="0x103ef4b91"><binary ref="15"/></frame><frame id="639" name="0x113a1e317" addr="0x113a1e317"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame id="640" name="LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, JavaThread*)" addr="0x10405be23"><binary ref="15"/></frame><frame id="641" name="LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*)" addr="0x10405e140"><binary ref="15"/></frame><frame id="642" name="InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code)" addr="0x103e3e6cf"><binary ref="15"/></frame><frame id="643" name="InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)" addr="0x103e3ed76"><binary ref="15"/></frame><frame id="644" name="0x113a2ec17" addr="0x113a2ec17"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame id="645" name="Threads::initialize_java_lang_classes(JavaThread*, JavaThread*)" addr="0x1043cf88a"><binary ref="15"/></frame><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="646" fmt="(370.929), (552.681)">370929 552681</pmc-events></row>
        <row><sample-time id="647" fmt="00:00.716.147">716147216</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="648"><frame id="649" name="jni_GetStringUTFChars" addr="0x103eb1fe1"><binary ref="15"/></frame><frame id="650" name="0x113a2253a" addr="0x113a2253a"/><frame id="651" name="0x113a1e23e" addr="0x113a1e23e"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame id="652" name="0x113a2ec25" addr="0x113a2ec25"/><frame ref="639"/><frame id="653" name="0x113a1e42b" addr="0x113a1e42b"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="652"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame id="654" name="InterpreterRuntime::_new(JavaThread*, ConstantPool*, int)" addr="0x103e3b2d8"><binary ref="15"/></frame><frame id="655" name="0x113a2fd61" addr="0x113a2fd61"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame id="656" name="InstanceKlass::initialize_impl(JavaThread*)" addr="0x103e21ceb"><binary ref="15"/></frame><frame ref="656"/><frame id="657" name="Threads::initialize_java_lang_classes(JavaThread*, JavaThread*)" addr="0x1043cf90b"><binary ref="15"/></frame><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="658" fmt="00:00.717.129">717129167</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="659"><frame id="660" name="InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const" addr="0x103e23e69"><binary ref="15"/></frame><frame id="661" name="InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const" addr="0x103e23fec"><binary ref="15"/></frame><frame id="662" name="LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, JavaThread*)" addr="0x10405b681"><binary ref="15"/></frame><frame id="663" name="LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, JavaThread*)" addr="0x10405b5d0"><binary ref="15"/></frame><frame id="664" name="InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code)" addr="0x103e3da32"><binary ref="15"/></frame><frame id="665" name="InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)" addr="0x103e3ed5b"><binary ref="15"/></frame><frame id="666" name="0x113a2d493" addr="0x113a2d493"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="654"/><frame id="667" name="0x113a2fd6f" addr="0x113a2fd6f"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="654"/><frame ref="655"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="656"/><frame ref="656"/><frame ref="657"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="668" fmt="(207.068), (281.551)">207068 281551</pmc-events></row>
        <row><sample-time id="669" fmt="00:00.719.129">719129408</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="670"><frame id="671" name="NativeLookup::pure_jni_name(methodHandle const&amp;)" addr="0x1041a42c3"><binary ref="15"/></frame><frame id="672" name="NativeLookup::lookup_entry(methodHandle const&amp;, JavaThread*)" addr="0x1041a4b59"><binary ref="15"/></frame><frame id="673" name="NativeLookup::lookup_base(methodHandle const&amp;, JavaThread*)" addr="0x1041a54c6"><binary ref="15"/></frame><frame id="674" name="NativeLookup::lookup(methodHandle const&amp;, JavaThread*)" addr="0x1041a5608"><binary ref="15"/></frame><frame id="675" name="InterpreterRuntime::prepare_native_call(JavaThread*, Method*)" addr="0x103e40c28"><binary ref="15"/></frame><frame id="676" name="0x113a223cb" addr="0x113a223cb"/><frame ref="651"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame id="677" name="JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)" addr="0x103e44c51"><binary ref="15"/></frame><frame id="678" name="JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaThread*)" addr="0x103e44ce2"><binary ref="15"/></frame><frame id="679" name="Threads::initialize_java_lang_classes(JavaThread*, JavaThread*)" addr="0x1043cf97b"><binary ref="15"/></frame><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="680" fmt="(190.351), (272.023)">190351 272023</pmc-events></row>
        <row><sample-time id="681" fmt="00:00.719.129">719129586</sample-time><thread id="682" fmt="JavaThread::thread_main_inner  0x6c593 (java, pid: 13748)"><tid id="683" fmt="0x6c593">443795</tid><process ref="4"/></thread><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="684"><frame id="685" name="pthread_mutex_trylock" addr="0x7ff81783bd5f"><binary ref="166"/></frame><frame id="686" name="SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*)" addr="0x104388123"><binary ref="15"/></frame><frame id="687" name="SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*)" addr="0x1043879dd"><binary ref="15"/></frame><frame id="688" name="ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*)" addr="0x103c76832"><binary ref="15"/></frame><frame id="689" name="ConstantPool::klass_ref_at(int, JavaThread*)" addr="0x103c77429"><binary ref="15"/></frame><frame id="690" name="LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, JavaThread*)" addr="0x10405908c"><binary ref="15"/></frame><frame id="691" name="LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*)" addr="0x10405e125"><binary ref="15"/></frame><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="629"/><frame ref="630"/><frame id="692" name="JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)" addr="0x103e44607"><binary ref="15"/></frame><frame id="693" name="JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)" addr="0x103e446d3"><binary ref="15"/></frame><frame id="694" name="thread_entry(JavaThread*, JavaThread*)" addr="0x103eef9f4"><binary ref="15"/></frame><frame id="695" name="JavaThread::thread_main_inner()" addr="0x1043cbd0f"><binary ref="15"/></frame><frame id="696" name="Thread::call_run()" addr="0x1043ca07f"><binary ref="15"/></frame><frame id="697" name="thread_native_entry(Thread*)" addr="0x1041d4328"><binary ref="15"/></frame><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="698" fmt="(11.211), (78.309)">11211 78309</pmc-events></row>
        <row><sample-time id="699" fmt="00:00.720.129">720129779</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="700"><frame ref="145"/><frame id="701" name="_CFGetFileProperties" addr="0x7ff8178d14cb"><binary ref="126"/></frame><frame id="702" name="_CFBundleCreate" addr="0x7ff8179b2f7b"><binary ref="126"/></frame><frame id="703" name="_CFCopyLocalizedVersionKey" addr="0x7ff81790429f"><binary ref="126"/></frame><frame id="704" name="_CFCopyVersionDictionary" addr="0x7ff817903fd6"><binary ref="126"/></frame><frame id="705" name="___CFCopySystemVersionDictionary_block_invoke" addr="0x7ff817903f09"><binary ref="126"/></frame><frame ref="107"/><frame ref="109"/><frame id="706" name="_CFCopySystemVersionDictionary" addr="0x7ff817903edf"><binary ref="126"/></frame><frame id="707" name="_CFCopySystemVersionDictionaryValue" addr="0x7ff817974cd9"><binary ref="126"/></frame><frame id="708" name="___CFOperatingSystemVersionGetCurrent_block_invoke" addr="0x7ff817974bba"><binary ref="126"/></frame><frame ref="107"/><frame ref="109"/><frame id="709" name="_CFOperatingSystemVersionGetCurrent" addr="0x7ff817974b8b"><binary ref="126"/></frame><frame id="710" name="-[NSProcessInfo operatingSystemVersion]" addr="0x7ff8187e5fb2"><binary ref="104"/></frame><frame id="711" name="__invoking___" addr="0x7ff8178fdc8c"><binary ref="126"/></frame><frame id="712" name="-[NSInvocation invoke]" addr="0x7ff8178fdb21"><binary ref="126"/></frame><frame id="713" name="-[NSInvocation invokeWithTarget:]" addr="0x7ff81792d109"><binary ref="126"/></frame><frame id="714" name="setOSNameAndVersion" addr="0x10283cdbe"><binary ref="395"/></frame><frame id="715" name="GetJavaProperties" addr="0x10283d855"><binary ref="395"/></frame><frame id="716" name="Java_jdk_internal_util_SystemProps_00024Raw_platformProperties" addr="0x102837f36"><binary ref="395"/></frame><frame ref="650"/><frame ref="651"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="678"/><frame ref="679"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="717" fmt="(130.526), (283.328)">130526 283328</pmc-events></row>
        <row><sample-time id="718" fmt="00:00.722.129">722129355</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="719"><frame id="720" name="__CFStringHash" addr="0x7ff8178a7195"><binary ref="126"/></frame><frame id="721" name="-[__NSDictionaryM __setObject:forKey:]" addr="0x7ff8178be121"><binary ref="126"/></frame><frame id="722" name="__72-[CFPrefsSource mergeIntoDictionary:sourceDictionary:cloudKeyEvaluator:]_block_invoke" addr="0x7ff8178d862d"><binary ref="126"/></frame><frame id="723" name="-[__NSFrozenDictionaryM __apply:context:]" addr="0x7ff8178d857d"><binary ref="126"/></frame><frame id="724" name="-[CFPrefsSource mergeIntoDictionary:sourceDictionary:cloudKeyEvaluator:]" addr="0x7ff8178d7fe3"><binary ref="126"/></frame><frame id="725" name="-[CFPrefsSearchListSource alreadylocked_getDictionary:]" addr="0x7ff8178d1ee6"><binary ref="126"/></frame><frame id="726" name="-[CFPrefsSearchListSource alreadylocked_copyValueForKey:]" addr="0x7ff8178d19b0"><binary ref="126"/></frame><frame id="727" name="-[CFPrefsSource copyValueForKey:]" addr="0x7ff8178d18fc"><binary ref="126"/></frame><frame id="728" name="__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke" addr="0x7ff8178d18ad"><binary ref="126"/></frame><frame id="729" name="__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke" addr="0x7ff8178ca386"><binary ref="126"/></frame><frame id="730" name="-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:]" addr="0x7ff817a363eb"><binary ref="126"/></frame><frame id="731" name="-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]" addr="0x7ff8178c9cc3"><binary ref="126"/></frame><frame id="732" name="_CFPreferencesCopyAppValueWithContainerAndConfiguration" addr="0x7ff8178c9bf8"><binary ref="126"/></frame><frame id="733" name="_CFBundleCopyUserLanguages" addr="0x7ff8178e9808"><binary ref="126"/></frame><frame id="734" name="_CFBundleCopyLanguageSearchListInBundle" addr="0x7ff8178e957f"><binary ref="126"/></frame><frame id="735" name="_copyQueryTable" addr="0x7ff8178e93aa"><binary ref="126"/></frame><frame id="736" name="_copyResourceURLsFromBundle" addr="0x7ff8178e8d32"><binary ref="126"/></frame><frame id="737" name="_CFBundleCopyFindResources" addr="0x7ff8178e8095"><binary ref="126"/></frame><frame id="738" name="CFBundleCopyResourceURL" addr="0x7ff8178e7b73"><binary ref="126"/></frame><frame id="739" name="_CFBundleGetStringsSources" addr="0x7ff817a3e5e2"><binary ref="126"/></frame><frame id="740" name="_copyStringTable" addr="0x7ff817a40476"><binary ref="126"/></frame><frame id="741" name="_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption" addr="0x7ff817a3ffbe"><binary ref="126"/></frame><frame id="742" name="CFBundleCopyLocalizedString" addr="0x7ff817904321"><binary ref="126"/></frame><frame id="743" name="_CFCopyLocalizedVersionKey" addr="0x7ff8179042c4"><binary ref="126"/></frame><frame ref="704"/><frame ref="705"/><frame ref="107"/><frame ref="109"/><frame ref="706"/><frame ref="707"/><frame ref="708"/><frame ref="107"/><frame ref="109"/><frame ref="709"/><frame ref="710"/><frame ref="711"/><frame ref="712"/><frame ref="713"/><frame ref="714"/><frame ref="715"/><frame ref="716"/><frame ref="650"/><frame ref="651"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="678"/><frame ref="679"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="744" fmt="(143.117), (144.375)">143117 144375</pmc-events></row>
        <row><sample-time id="745" fmt="00:00.723.129">723129903</sample-time><thread ref="301"/><process ref="4"/><core ref="33"/><thread-state ref="8"/><backtrace id="746"><frame id="747" name="__open_nocancel" addr="0x7ff817800007"><binary ref="146"/></frame><frame id="748" name="open$NOCANCEL" addr="0x7ff81780f27c"><binary ref="146"/></frame><frame id="749" name="__open_path_locale" addr="0x7ff817709646"><binary ref="122"/></frame><frame id="750" name="__setrunelocale" addr="0x7ff8177098e0"><binary ref="122"/></frame><frame id="751" name="__wrap_setrunelocale" addr="0x7ff8177097fa"><binary ref="122"/></frame><frame id="752" name="loadlocale" addr="0x7ff817708dd4"><binary ref="122"/></frame><frame id="753" name="setlocale" addr="0x7ff8176efc9b"><binary ref="122"/></frame><frame id="754" name="GetJavaProperties" addr="0x10283d871"><binary ref="395"/></frame><frame ref="716"/><frame ref="650"/><frame ref="651"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="678"/><frame ref="679"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="755" fmt="(1.482.175), (1.670.334)">1482175 1670334</pmc-events></row>
        <row><sample-time id="756" fmt="00:00.724.129">724129318</sample-time><thread ref="301"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="757"><frame id="758" name="_pthread_mutex_firstfit_lock_slow" addr="0x7ff8178398e4"><binary ref="166"/></frame><frame id="759" name="flockfile" addr="0x7ff8176f6820"><binary ref="122"/></frame><frame id="760" name="fread" addr="0x7ff8176fb305"><binary ref="122"/></frame><frame id="761" name="_Read_RuneMagi" addr="0x7ff817709ff8"><binary ref="122"/></frame><frame id="762" name="__setrunelocale" addr="0x7ff817709902"><binary ref="122"/></frame><frame ref="751"/><frame ref="752"/><frame ref="753"/><frame ref="754"/><frame ref="716"/><frame ref="650"/><frame ref="651"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="678"/><frame ref="679"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="763" fmt="(466.320), (246.505)">466320 246505</pmc-events></row>
        <row><sample-time id="764" fmt="00:00.727.129">727129261</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="765"><frame ref="24"/><frame ref="25"/><frame id="766" name="dyld4::APIs::dlsym(void*, char const*)" addr="0x7ff8175181d4"><binary ref="19"/></frame><frame id="767" name="NativeLookup::lookup_style(methodHandle const&amp;, char*, char const*, int, bool, JavaThread*)" addr="0x1041a4a06"><binary ref="15"/></frame><frame id="768" name="NativeLookup::lookup_entry(methodHandle const&amp;, JavaThread*)" addr="0x1041a4b99"><binary ref="15"/></frame><frame ref="673"/><frame ref="674"/><frame ref="675"/><frame ref="676"/><frame ref="653"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="678"/><frame ref="679"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="769" fmt="(1.899.423), (2.184.178)">1899423 2184178</pmc-events></row>
        <row><sample-time id="770" fmt="00:00.731.129">731129608</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="771"><frame id="772" name="_platform_strlen" addr="0x7ff817868f01"><binary ref="362"/></frame><frame id="773" name="__vfprintf" addr="0x7ff8176e81bf"><binary ref="122"/></frame><frame id="774" name="_vsnprintf" addr="0x7ff8177157ce"><binary ref="122"/></frame><frame id="775" name="vsnprintf" addr="0x7ff8176eb965"><binary ref="122"/></frame><frame id="776" name="os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*)" addr="0x1041d9d32"><binary ref="15"/></frame><frame id="777" name="jio_snprintf" addr="0x103ede201"><binary ref="15"/></frame><frame id="778" name="AdapterHandlerLibrary::get_adapter(methodHandle const&amp;)" addr="0x104273c6c"><binary ref="15"/></frame><frame ref="601"/><frame ref="602"/><frame id="779" name="InstanceKlass::link_class_impl(JavaThread*)" addr="0x103e21526"><binary ref="15"/></frame><frame id="780" name="InstanceKlass::initialize_impl(JavaThread*)" addr="0x103e21ae9"><binary ref="15"/></frame><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="653"/><frame ref="653"/><frame ref="651"/><frame ref="653"/><frame ref="653"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="678"/><frame ref="679"/><frame ref="634"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="781" fmt="(156.799), (235.074)">156799 235074</pmc-events></row>
        <row><sample-time id="782" fmt="00:00.733.128">733128909</sample-time><thread id="783" fmt="JavaThread::thread_main_inner  0x6c599 (java, pid: 13748)"><tid id="784" fmt="0x6c599">443801</tid><process ref="4"/></thread><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="785"><frame id="786" name="__psynch_mutexwait" addr="0x7ff817801893"><binary ref="146"/></frame><frame id="787" name="_pthread_mutex_firstfit_lock_wait" addr="0x7ff81783bb14"><binary ref="166"/></frame><frame id="788" name="_pthread_mutex_firstfit_lock_slow" addr="0x7ff817839921"><binary ref="166"/></frame><frame id="789" name="Mutex::lock_contended(Thread*)" addr="0x10419f9f0"><binary ref="15"/></frame><frame id="790" name="Mutex::lock(Thread*)" addr="0x10419fa55"><binary ref="15"/></frame><frame id="791" name="CompileBroker::compiler_thread_loop()" addr="0x103c5caf5"><binary ref="15"/></frame><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="792" fmt="(207), (3.733)">207 3733</pmc-events></row>
        <row><sample-time id="793" fmt="00:00.733.129">733129082</sample-time><thread id="794" fmt="JavaThread::thread_main_inner  0x6c59a (java, pid: 13748)"><tid id="795" fmt="0x6c59a">443802</tid><process ref="4"/></thread><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="796"><frame id="797" name="ciEnv::ciEnv(Arena*)" addr="0x103bd5531"><binary ref="15"/></frame><frame id="798" name="CompileBroker::compiler_thread_loop()" addr="0x103c5cb06"><binary ref="15"/></frame><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="799" fmt="(1.028), (4.848)">1028 4848</pmc-events></row>
        <row><sample-time id="800" fmt="00:00.733.129">733129827</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="801"><frame id="802" name="JVM_RegisterMethodHandleMethods" addr="0x104188be8"><binary ref="15"/></frame><frame ref="650"/><frame ref="653"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame id="803" name="Threads::initialize_jsr292_core_classes(JavaThread*)" addr="0x1043d01df"><binary ref="15"/></frame><frame id="804" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d0902"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="805" fmt="(368.599), (533.067)">368599 533067</pmc-events></row>
        <row><sample-time id="806" fmt="00:00.734.129">734129276</sample-time><thread ref="794"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="807"><frame id="808" name="Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;)" addr="0x103ac965d"><binary ref="15"/></frame><frame id="809" name="MacroAssembler::stop(char const*)" addr="0x1040d1501"><binary ref="15"/></frame><frame id="810" name="Runtime1::generate_exception_throw(StubAssembler*, unsigned char*, bool)" addr="0x103b8f301"><binary ref="15"/></frame><frame id="811" name="Runtime1::generate_code_for(Runtime1::StubID, StubAssembler*)" addr="0x103b91192"><binary ref="15"/></frame><frame id="812" name="Runtime1::generate_blob(BufferBlob*, int, char const*, bool, StubAssemblerCodeGenClosure*)" addr="0x103b89e2c"><binary ref="15"/></frame><frame id="813" name="Runtime1::initialize(BufferBlob*)" addr="0x103b89f88"><binary ref="15"/></frame><frame id="814" name="Compiler::initialize()" addr="0x103b0e232"><binary ref="15"/></frame><frame id="815" name="CompileBroker::init_compiler_runtime()" addr="0x103c5c5e1"><binary ref="15"/></frame><frame id="816" name="CompileBroker::compiler_thread_loop()" addr="0x103c5cc3e"><binary ref="15"/></frame><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="817" fmt="(370.157), (329.823)">370157 329823</pmc-events></row>
        <row><sample-time id="818" fmt="00:00.734.129">734129407</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="819"><frame id="820" name="Klass::append_to_sibling_list()" addr="0x104028c00"><binary ref="15"/></frame><frame id="821" name="SystemDictionary::define_instance_class(InstanceKlass*, Handle, JavaThread*)" addr="0x104389a58"><binary ref="15"/></frame><frame id="822" name="SystemDictionary::find_or_define_helper(Symbol*, Handle, InstanceKlass*, JavaThread*)" addr="0x10438ae17"><binary ref="15"/></frame><frame id="823" name="SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*)" addr="0x10438a715"><binary ref="15"/></frame><frame id="824" name="SystemDictionary::load_instance_class(unsigned int, Symbol*, Handle, JavaThread*)" addr="0x104388f55"><binary ref="15"/></frame><frame id="825" name="SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*)" addr="0x10438840a"><binary ref="15"/></frame><frame ref="687"/><frame ref="688"/><frame id="826" name="InterpreterRuntime::_new(JavaThread*, ConstantPool*, int)" addr="0x103e3b29a"><binary ref="15"/></frame><frame ref="667"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="639"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="656"/><frame ref="656"/><frame id="827" name="HeapShared::resolve_or_init_classes_for_subgraph_of(Klass*, bool, JavaThread*)" addr="0x103e0b4e1"><binary ref="15"/></frame><frame id="828" name="HeapShared::initialize_from_archived_subgraph(Klass*, JavaThread*)" addr="0x103e0b67d"><binary ref="15"/></frame><frame id="829" name="JVM_InitializeFromArchive" addr="0x103ef4235"><binary ref="15"/></frame><frame ref="650"/><frame ref="653"/><frame ref="629"/><frame ref="630"/><frame ref="631"/><frame ref="632"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="652"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame id="830" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x1043d09c8"><binary ref="15"/></frame><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="831" fmt="(94.434), (161.162)">94434 161162</pmc-events></row>
        <row><sample-time id="832" fmt="00:00.735.129">735129125</sample-time><thread ref="783"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="833"><frame id="834" name="TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int)" addr="0x1043eadfd"><binary ref="15"/></frame><frame id="835" name="TypeAryPtr::xdual() const" addr="0x1043ef5fd"><binary ref="15"/></frame><frame id="836" name="Type::hashcons()" addr="0x1043e084c"><binary ref="15"/></frame><frame id="837" name="Type::Initialize_shared(Compile*)" addr="0x1043e43c8"><binary ref="15"/></frame><frame id="838" name="Type::Initialize(Compile*)" addr="0x1043e5e7f"><binary ref="15"/></frame><frame id="839" name="Compile::Compile(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool, DirectiveSet*)" addr="0x103c4d8f7"><binary ref="15"/></frame><frame id="840" name="OptoRuntime::generate_stub(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool)" addr="0x104260692"><binary ref="15"/></frame><frame id="841" name="OptoRuntime::generate(ciEnv*)" addr="0x1042602c2"><binary ref="15"/></frame><frame id="842" name="C2Compiler::initialize()" addr="0x103bab1c8"><binary ref="15"/></frame><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="843" fmt="(33.862), (66.051)">33862 66051</pmc-events></row>
        <row><sample-time id="844" fmt="00:00.735.129">735129396</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="845"><frame id="846" name="ModuleEntryTable::load_archived_entries(ClassLoaderData*, Array&lt;ModuleEntry*&gt;*)" addr="0x104190d84"><binary ref="15"/></frame><frame id="847" name="ClassLoaderDataShared::restore_java_platform_loader_from_archive(ClassLoaderData*)" addr="0x103c1c15d"><binary ref="15"/></frame><frame id="848" name="Modules::define_archived_modules(Handle, Handle, JavaThread*)" addr="0x104193712"><binary ref="15"/></frame><frame id="849" name="JVM_DefineArchivedModules" addr="0x103ee34d6"><binary ref="15"/></frame><frame ref="650"/><frame ref="653"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="677"/><frame ref="830"/><frame ref="306"/><frame ref="307"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="850" fmt="(2.083.911), (2.782.035)">2083911 2782035</pmc-events></row>
        <row><sample-time id="851" fmt="00:00.737.129">737129264</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="852"><frame id="853" name="SymbolTable::lookup_shared(char const*, int, unsigned int)" addr="0x10437f47a"><binary ref="15"/></frame><frame id="854" name="SymbolTable::new_symbol(char const*, int)" addr="0x10437f6bc"><binary ref="15"/></frame><frame id="855" name="JVM_FindClassFromBootLoader" addr="0x103ee0c1d"><binary ref="15"/></frame><frame id="856" name="JavaMain" addr="0x102780d02"><binary ref="138"/></frame><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="857" fmt="(242.944), (482.168)">242944 482168</pmc-events></row>
        <row><sample-time id="858" fmt="00:00.740.129">740129118</sample-time><thread ref="783"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="859"><frame id="860" name="State::DFA(int, Node const*)" addr="0x103ce7737"><binary ref="15"/></frame><frame id="861" name="Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;)" addr="0x104147bab"><binary ref="15"/></frame><frame id="862" name="Matcher::match_tree(Node const*)" addr="0x10414349b"><binary ref="15"/></frame><frame id="863" name="Matcher::regmask_for_ideal_register(unsigned int, Node*)" addr="0x104146726"><binary ref="15"/></frame><frame id="864" name="Matcher::init_spill_mask(Node*)" addr="0x104142539"><binary ref="15"/></frame><frame id="865" name="Matcher::match()" addr="0x104141614"><binary ref="15"/></frame><frame id="866" name="Compile::Code_Gen()" addr="0x103c4c8da"><binary ref="15"/></frame><frame id="867" name="Compile::Compile(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool, DirectiveSet*)" addr="0x103c4da66"><binary ref="15"/></frame><frame ref="840"/><frame ref="841"/><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="868" fmt="(8.988), (32.260)">8988 32260</pmc-events></row>
        <row><sample-time id="869" fmt="00:00.740.129">740129186</sample-time><thread ref="794"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="870"><frame id="871" name="LinearScan::resolve_data_flow()" addr="0x103b75001"><binary ref="15"/></frame><frame id="872" name="LinearScan::do_linear_scan()" addr="0x103b78ca0"><binary ref="15"/></frame><frame id="873" name="Compilation::emit_lir()" addr="0x103b0c155"><binary ref="15"/></frame><frame id="874" name="Compilation::compile_java_method()" addr="0x103b0cae3"><binary ref="15"/></frame><frame id="875" name="Compilation::compile_method()" addr="0x103b0cdec"><binary ref="15"/></frame><frame id="876" name="Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)" addr="0x103b0d218"><binary ref="15"/></frame><frame id="877" name="Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)" addr="0x103b0e881"><binary ref="15"/></frame><frame id="878" name="CompileBroker::invoke_compiler_on_method(CompileTask*)" addr="0x103c5d68e"><binary ref="15"/></frame><frame id="879" name="CompileBroker::compiler_thread_loop()" addr="0x103c5cf4b"><binary ref="15"/></frame><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="880" fmt="00:00.741.128">741128993</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="881"><frame id="882" name="ImageFileReader::find_location_index(char const*, unsigned long long*) const" addr="0x1027fd4f6"><binary id="883" name="libjimage.dylib" UUID="AD3392CD-29F3-32A3-81A5-A123B8E3BA2A" arch="x86_64" load-addr="0x1027fa000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/libjimage.dylib"/></frame><frame id="884" name="JIMAGE_FindResource" addr="0x1027fd8f0"><binary ref="883"/></frame><frame id="885" name="ClassPathImageEntry::open_stream_for_loader(JavaThread*, char const*, ClassLoaderData*)" addr="0x103c10eaf"><binary ref="15"/></frame><frame id="886" name="ClassLoader::load_class(Symbol*, bool, JavaThread*)" addr="0x103c146aa"><binary ref="15"/></frame><frame id="887" name="SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*)" addr="0x10438a6e0"><binary ref="15"/></frame><frame ref="824"/><frame ref="825"/><frame ref="687"/><frame ref="688"/><frame ref="826"/><frame ref="667"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="692"/><frame id="888" name="JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, JavaThread*)" addr="0x103e44770"><binary ref="15"/></frame><frame id="889" name="SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*)" addr="0x10438a43a"><binary ref="15"/></frame><frame ref="824"/><frame ref="825"/><frame ref="687"/><frame id="890" name="JVM_FindClassFromCaller" addr="0x103ee0f21"><binary ref="15"/></frame><frame id="891" name="Java_java_lang_Class_forName0" addr="0x102832535"><binary ref="395"/></frame><frame ref="650"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame id="892" name="jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*)" addr="0x103ea9998"><binary ref="15"/></frame><frame id="893" name="jni_CallStaticObjectMethod" addr="0x103eaa2b7"><binary ref="15"/></frame><frame id="894" name="JavaMain" addr="0x102780d86"><binary ref="138"/></frame><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="895" fmt="(17), (1.980)">17 1980</pmc-events></row>
        <row><sample-time id="896" fmt="00:00.741.129">741129293</sample-time><thread ref="794"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="897"><frame id="898" name="LIR_Assembler::mem2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool)" addr="0x103b41301"><binary ref="15"/></frame><frame id="899" name="LIR_Assembler::emit_op1(LIR_Op1*)" addr="0x103b3d1b9"><binary ref="15"/></frame><frame id="900" name="LIR_Assembler::emit_lir_list(LIR_List*)" addr="0x103b3c645"><binary ref="15"/></frame><frame id="901" name="LIR_Assembler::emit_code(BlockList*)" addr="0x103b3c6e9"><binary ref="15"/></frame><frame id="902" name="Compilation::emit_code_body()" addr="0x103b0c471"><binary ref="15"/></frame><frame id="903" name="Compilation::compile_java_method()" addr="0x103b0cba5"><binary ref="15"/></frame><frame ref="875"/><frame ref="876"/><frame ref="877"/><frame ref="878"/><frame ref="879"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="904" fmt="00:00.742.128">742128998</sample-time><thread ref="783"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="905"><frame id="906" name="State::_sub_Op_AddP(Node const*)" addr="0x103cac01b"><binary ref="15"/></frame><frame id="907" name="State::DFA(int, Node const*)" addr="0x103ce28e2"><binary ref="15"/></frame><frame ref="861"/><frame id="908" name="Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;)" addr="0x104147b59"><binary ref="15"/></frame><frame ref="908"/><frame ref="908"/><frame ref="862"/><frame id="909" name="Matcher::xform(Node*, int)" addr="0x104143232"><binary ref="15"/></frame><frame id="910" name="Matcher::match()" addr="0x104141df7"><binary ref="15"/></frame><frame ref="866"/><frame ref="867"/><frame ref="840"/><frame ref="841"/><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="911" fmt="00:00.742.129">742129549</sample-time><thread ref="794"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="912"><frame id="913" name="GraphBuilder::access_field(Bytecodes::Code)" addr="0x103b1a007"><binary ref="15"/></frame><frame id="914" name="GraphBuilder::iterate_bytecodes_for_block(int)" addr="0x103b20a2e"><binary ref="15"/></frame><frame id="915" name="GraphBuilder::iterate_all_blocks(bool)" addr="0x103b24274"><binary ref="15"/></frame><frame id="916" name="GraphBuilder::GraphBuilder(Compilation*, IRScope*)" addr="0x103b25f01"><binary ref="15"/></frame><frame id="917" name="IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)" addr="0x103b2d545"><binary ref="15"/></frame><frame id="918" name="IR::IR(Compilation*, ciMethod*, int)" addr="0x103b2dc02"><binary ref="15"/></frame><frame id="919" name="Compilation::build_hir()" addr="0x103b0b884"><binary ref="15"/></frame><frame id="920" name="Compilation::compile_java_method()" addr="0x103b0c930"><binary ref="15"/></frame><frame ref="875"/><frame ref="876"/><frame ref="877"/><frame ref="878"/><frame ref="879"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="921" fmt="(52.534), (198.642)">52534 198642</pmc-events></row>
        <row><sample-time id="922" fmt="00:00.742.129">742129659</sample-time><thread ref="301"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="923"><frame id="924" name="_platform_memmove$VARIANT$Haswell" addr="0x7ff817868a1e"><binary ref="362"/></frame><frame id="925" name="Assembler::popa()" addr="0x103acd8eb"><binary ref="15"/></frame><frame id="926" name="MacroAssembler::pop_CPU_state()" addr="0x1040d1b25"><binary ref="15"/></frame><frame id="927" name="SharedRuntime::generate_i2c2i_adapters(MacroAssembler*, int, int, BasicType const*, VMRegPair const*, AdapterFingerPrint*)" addr="0x10427ca04"><binary ref="15"/></frame><frame id="928" name="AdapterHandlerLibrary::create_adapter(AdapterBlob*&amp;, int, BasicType*, bool)" addr="0x104273689"><binary ref="15"/></frame><frame ref="600"/><frame ref="601"/><frame ref="602"/><frame ref="780"/><frame ref="640"/><frame ref="641"/><frame ref="642"/><frame ref="643"/><frame ref="644"/><frame ref="653"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="692"/><frame ref="888"/><frame ref="889"/><frame ref="824"/><frame ref="825"/><frame ref="687"/><frame ref="890"/><frame ref="891"/><frame ref="650"/><frame ref="651"/><frame ref="651"/><frame ref="651"/><frame ref="629"/><frame ref="630"/><frame ref="892"/><frame ref="893"/><frame ref="894"/><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="929" fmt="(164.940), (297.481)">164940 297481</pmc-events></row>
        <row><sample-time id="930" fmt="00:00.744.129">744129095</sample-time><thread ref="783"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="931"><frame id="932" name="indOffset8Oper::base_position() const" addr="0x1039a1111"><binary ref="15"/></frame><frame id="933" name="MachNode::get_base_and_disp(long&amp;, TypePtr const*&amp;) const" addr="0x1040bab04"><binary ref="15"/></frame><frame id="934" name="MachNode::adr_type() const" addr="0x1040bace5"><binary ref="15"/></frame><frame id="935" name="PhaseCFG::insert_anti_dependences(Block*, Node*, bool)" addr="0x103db51ab"><binary ref="15"/></frame><frame id="936" name="PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;)" addr="0x103db70e1"><binary ref="15"/></frame><frame id="937" name="PhaseCFG::global_code_motion()" addr="0x103db74db"><binary ref="15"/></frame><frame id="938" name="PhaseCFG::do_global_code_motion()" addr="0x103db7aea"><binary ref="15"/></frame><frame id="939" name="Compile::Code_Gen()" addr="0x103c4cb53"><binary ref="15"/></frame><frame ref="867"/><frame ref="840"/><frame ref="841"/><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="940" fmt="(17.549), (55.252)">17549 55252</pmc-events></row>
        <row><sample-time id="941" fmt="00:00.744.129">744129825</sample-time><thread ref="794"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="942"><frame id="943" name="LinearScan::build_intervals()" addr="0x103b73a20"><binary ref="15"/></frame><frame id="944" name="LinearScan::do_linear_scan()" addr="0x103b78c6a"><binary ref="15"/></frame><frame ref="873"/><frame ref="874"/><frame ref="875"/><frame ref="876"/><frame ref="877"/><frame ref="878"/><frame ref="879"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="945" fmt="(463.596), (631.301)">463596 631301</pmc-events></row>
        <row><sample-time id="946" fmt="00:00.746.129">746129308</sample-time><thread ref="783"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="947"><frame id="948" name="PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)" addr="0x1042172f1"><binary ref="15"/></frame><frame id="949" name="PhaseChaitin::post_allocate_copy_removal()" addr="0x104219367"><binary ref="15"/></frame><frame id="950" name="PhaseChaitin::Register_Allocate()" addr="0x103bcc082"><binary ref="15"/></frame><frame id="951" name="Compile::Code_Gen()" addr="0x103c4cd95"><binary ref="15"/></frame><frame ref="867"/><frame ref="840"/><frame ref="841"/><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="952" fmt="(12.161), (20.003)">12161 20003</pmc-events></row>
        <row><sample-time id="953" fmt="00:00.746.131">746131753</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="954"><frame id="955" name="0x113a2448b" addr="0x113a2448b"/><frame ref="629"/><frame ref="630"/><frame ref="892"/><frame id="956" name="jni_CallStaticVoidMethod" addr="0x103eace17"><binary ref="15"/></frame><frame id="957" name="JavaMain" addr="0x102780fbf"><binary ref="138"/></frame><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="958" fmt="(7.621.517), (3.218.787)">7621517 3218787</pmc-events></row>
        <row><sample-time id="959" fmt="00:00.747.129">747129682</sample-time><thread ref="301"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><backtrace id="960"><frame id="961" name="oopDesc::address_field_put(int, unsigned char*)" addr="0x1041c3821"><binary ref="15"/></frame><frame id="962" name="jni_DetachCurrentThread" addr="0x103eba884"><binary ref="15"/></frame><frame id="963" name="JavaMain" addr="0x102780fdc"><binary ref="138"/></frame><frame ref="308"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="964" fmt="(2.616.577), (1.189.859)">2616577 1189859</pmc-events></row>
        <row><sample-time id="965" fmt="00:00.747.129">747129834</sample-time><thread ref="794"/><process ref="4"/><core ref="135"/><thread-state ref="8"/><backtrace id="966"><frame id="967" name="MacroAssembler::as_Address(AddressLiteral)" addr="0x1040cf7d7"><binary ref="15"/></frame><frame id="968" name="LIR_Assembler::arith_op(LIR_Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, bool)" addr="0x103b45978"><binary ref="15"/></frame><frame id="969" name="LIR_Assembler::emit_op2(LIR_Op2*)" addr="0x103b3d8c2"><binary ref="15"/></frame><frame ref="900"/><frame ref="901"/><frame ref="902"/><frame ref="903"/><frame ref="875"/><frame ref="876"/><frame ref="877"/><frame ref="878"/><frame ref="879"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="970" fmt="(203.736), (295.385)">203736 295385</pmc-events></row>
        <row><sample-time id="971" fmt="00:00.748.128">748128911</sample-time><thread ref="783"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="972"><frame id="973" name="jmpConNode::size(PhaseRegAlloc*) const" addr="0x103961b51"><binary ref="15"/></frame><frame id="974" name="PhaseOutput::Output()" addr="0x1041e1573"><binary ref="15"/></frame><frame id="975" name="Compile::Code_Gen()" addr="0x103c4d080"><binary ref="15"/></frame><frame ref="867"/><frame ref="840"/><frame ref="841"/><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="976" fmt="(544), (6.365)">544 6365</pmc-events></row>
        <row><sample-time id="977" fmt="00:00.749.129">749129651</sample-time><thread ref="783"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="978"><frame id="979" name="OptoRuntime::multianewarray2_Type()" addr="0x104260e81"><binary ref="15"/></frame><frame ref="840"/><frame id="980" name="OptoRuntime::generate(ciEnv*)" addr="0x10426037f"><binary ref="15"/></frame><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="981" fmt="(1.102.612), (1.492.553)">1102612 1492553</pmc-events></row>
        <row><sample-time id="982" fmt="00:00.750.129">750129984</sample-time><thread ref="783"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><backtrace id="983"><frame id="984" name="PhaseChaitin::build_ifg_physical(ResourceArea*)" addr="0x103e16a80"><binary ref="15"/></frame><frame id="985" name="PhaseChaitin::Register_Allocate()" addr="0x103bcbcb3"><binary ref="15"/></frame><frame ref="951"/><frame ref="867"/><frame ref="840"/><frame id="986" name="OptoRuntime::generate(ciEnv*)" addr="0x1042604f3"><binary ref="15"/></frame><frame ref="842"/><frame ref="815"/><frame ref="816"/><frame ref="695"/><frame ref="696"/><frame ref="697"/><frame ref="165"/><frame ref="167"/></backtrace><weight ref="9"/><pmc-events id="987" fmt="(3.736.276), (3.463.584)">3736276 3463584</pmc-events></row>
        <row><sample-time id="988" fmt="00:00.769.129">769129725</sample-time><thread id="989" fmt="java  0x6c59e (java, pid: 13748)"><tid id="990" fmt="0x6c59e">443806</tid><process ref="4"/></thread><process ref="4"/><core id="991" fmt="CPU 7 (SMT Core)">7</core><thread-state ref="8"/><sentinel/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="992" fmt="00:00.769.130">769130128</sample-time><thread ref="152"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><sentinel/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="993" fmt="00:00.770.131">770131426</sample-time><thread ref="152"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><sentinel/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="994" fmt="00:00.771.130">771130351</sample-time><thread ref="152"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><sentinel/><weight ref="9"/><pmc-events ref="20"/></row>
        <row><sample-time id="995" fmt="00:00.772.130">772130138</sample-time><thread ref="152"/><process ref="4"/><core ref="22"/><thread-state ref="8"/><sentinel/><weight ref="9"/><pmc-events ref="20"/></row>
    </node></trace-query-result>
