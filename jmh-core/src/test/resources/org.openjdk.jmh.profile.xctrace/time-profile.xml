<?xml version="1.0"?>
<trace-query-result>
    <node xpath='//trace-toc[1]/run[1]/data[1]/table[11]'><schema name="time-profile"><col><mnemonic>time</mnemonic><name>Sample Time</name><engineering-type>sample-time</engineering-type></col><col><mnemonic>thread</mnemonic><name>Thread</name><engineering-type>thread</engineering-type></col><col><mnemonic>process</mnemonic><name>Process</name><engineering-type>process</engineering-type></col><col><mnemonic>core</mnemonic><name>Core</name><engineering-type>core</engineering-type></col><col><mnemonic>thread-state</mnemonic><name>State</name><engineering-type>thread-state</engineering-type></col><col><mnemonic>weight</mnemonic><name>Weight</name><engineering-type>weight</engineering-type></col><col><mnemonic>stack</mnemonic><name>Backtrace</name><engineering-type>backtrace</engineering-type></col></schema><row><sample-time id="1" fmt="00:00.070.294">70294787</sample-time><thread id="2" fmt="Main Thread  0xe7716 (java, pid: 23369)"><tid id="3" fmt="0xe7716">947990</tid><process id="4" fmt="java (23369)"><pid id="5" fmt="23369">23369</pid><device-session id="6" fmt="TODO">TODO</device-session></process></thread><process ref="4"/><core id="7" fmt="CPU 2">2</core><thread-state id="8" fmt="Running">Running</thread-state><weight id="9" fmt="1.00 ms">1000000</weight><backtrace id="10"><frame id="11" name="_kernelrpc_mach_vm_protect_trap" addr="0x7ff8174df51f"><binary id="12" name="dyld" UUID="31E1C182-E611-3883-97A3-4334A21C90BD" arch="x86_64" load-addr="0x7ff8174de000" path="/usr/lib/dyld"/></frame><frame id="13" name="lsl::MemoryManager::vm_allocate_bytes(unsigned long)" addr="0x7ff81750bea4"><binary ref="12"/></frame><frame id="14" name="lsl::Allocator::persistentAllocator(lsl::MemoryManager&amp;&amp;)" addr="0x7ff81750ea42"><binary ref="12"/></frame><frame id="15" name="start" addr="0x7ff8174e42fe"><binary ref="12"/></frame></backtrace></row>
        <row><sample-time id="16" fmt="00:00.071.295">71295629</sample-time><thread ref="2"/><process ref="4"/><core id="17" fmt="CPU 3 (SMT Core)">3</core><thread-state ref="8"/><weight ref="9"/><backtrace id="18"><frame id="19" name="_kernelrpc_mach_vm_deallocate_trap" addr="0x7ff8174df507"><binary ref="12"/></frame><frame id="20" name="Diagnostics::clearError()" addr="0x7ff817540392"><binary ref="12"/></frame><frame id="21" name="invocation function for block in dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174f812b"><binary ref="12"/></frame><frame id="22" name="dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer)" addr="0x7ff8174f73f9"><binary ref="12"/></frame><frame id="23" name="dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, dyld3::Platform, bool, bool, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) const" addr="0x7ff8174e727c"><binary ref="12"/></frame><frame id="24" name="dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer)" addr="0x7ff8174f6f3d"><binary ref="12"/></frame><frame id="25" name="dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174f779e"><binary ref="12"/></frame><frame id="26" name="invocation function for block in dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174feaf9"><binary ref="12"/></frame><frame id="27" name="invocation function for block in dyld3::MachOFile::forEachDependentDylib(void (char const*, bool, bool, bool, unsigned int, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81752f622"><binary ref="12"/></frame><frame id="28" name="dyld3::MachOFile::forEachLoadCommand(Diagnostics&amp;, void (load_command const*, bool&amp;) block_pointer) const" addr="0x7ff8174e00af"><binary ref="12"/></frame><frame id="29" name="dyld3::MachOFile::forEachDependentDylib(void (char const*, bool, bool, bool, unsigned int, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81752f49a"><binary ref="12"/></frame><frame id="30" name="dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174fe82e"><binary ref="12"/></frame><frame id="31" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e4ea2"><binary ref="12"/></frame><frame id="32" name="start" addr="0x7ff8174e43bd"><binary ref="12"/></frame></backtrace></row>
        <row><sample-time id="33" fmt="00:00.073.295">73295538</sample-time><thread ref="2"/><process ref="4"/><core id="34" fmt="CPU 6">6</core><thread-state ref="8"/><weight ref="9"/><backtrace id="35"><frame id="36" name="dyld4::PrebuiltLoader::dependent(dyld4::RuntimeState const&amp;, unsigned int, dyld4::Loader::DependentKind*) const" addr="0x7ff817501c35"><binary ref="12"/></frame><frame id="37" name="dyld4::PrebuiltLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff817501b68"><binary ref="12"/></frame><frame id="38" name="dyld4::PrebuiltLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff817501bea"><binary ref="12"/></frame><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame ref="38"/><frame id="39" name="dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174fe8ae"><binary ref="12"/></frame><frame ref="39"/><frame ref="31"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="40" fmt="00:00.074.307">74307639</sample-time><thread ref="2"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="41"><frame id="42" name="dyld4::Loader::dependent(dyld4::RuntimeState const&amp;, unsigned int, dyld4::Loader::DependentKind*) const" addr="0x7ff8174f660d"><binary ref="12"/></frame><frame id="43" name="dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const" addr="0x7ff8174fb777"><binary ref="12"/></frame><frame id="44" name="dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const" addr="0x7ff8174fb7c1"><binary ref="12"/></frame><frame id="45" name="dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const" addr="0x7ff8174fb1ba"><binary ref="12"/></frame><frame id="46" name="invocation function for block in dyld4::JustInTimeLoader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const" addr="0x7ff8174fffd9"><binary ref="12"/></frame><frame id="47" name="invocation function for block in mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff8175368c1"><binary ref="12"/></frame><frame id="48" name="mach_o::Fixups::forEachBind_OpcodesLazy(Diagnostics&amp;, void (char const*, bool, bool, unsigned int, int, unsigned int, unsigned int, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const" addr="0x7ff817536285"><binary ref="12"/></frame><frame id="49" name="mach_o::Fixups::forEachBindUnified_Opcodes(Diagnostics&amp;, bool, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff817535925"><binary ref="12"/></frame><frame id="50" name="mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff817535312"><binary ref="12"/></frame><frame id="51" name="invocation function for block in dyld4::JustInTimeLoader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const" addr="0x7ff8174fff54"><binary ref="12"/></frame><frame id="52" name="dyld3::MachOAnalyzer::withVMLayout(Diagnostics&amp;, void (mach_o::Layout const&amp;) block_pointer) const" addr="0x7ff817538428"><binary ref="12"/></frame><frame id="53" name="dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool) const" addr="0x7ff8174ff203"><binary ref="12"/></frame><frame id="54" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e52a5"><binary ref="12"/></frame><frame ref="32"/></backtrace></row>
        <row><sample-time id="55" fmt="00:00.075.294">75294360</sample-time><thread ref="2"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="56"><frame id="57" name="__kdebug_trace64" addr="0x7ff8174e2a07"><binary ref="12"/></frame><frame id="58" name="dyld3::kdebug_trace_dyld_image(unsigned int, char const*, unsigned char const (*) [16], fsobj_id, fsid, mach_header const*)" addr="0x7ff817522c4f"><binary ref="12"/></frame><frame id="59" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e548e"><binary ref="12"/></frame><frame ref="32"/></backtrace></row>
        <row><sample-time id="60" fmt="00:00.076.294">76294359</sample-time><thread ref="2"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="56"/></row>
        <row><sample-time id="61" fmt="00:00.078.296">78296809</sample-time><thread ref="2"/><process ref="4"/><core id="62" fmt="CPU 0">0</core><thread-state ref="8"/><weight ref="9"/><backtrace id="63"><frame id="64" name="mach_msg2_trap" addr="0x7ff8177ff5c3"><binary id="65" name="libsystem_kernel.dylib" UUID="642737CE-21CF-3D87-A7B6-7EEA2C080A7E" arch="x86_64" load-addr="0x7ff8177fe000" path="/usr/lib/system/libsystem_kernel.dylib"/></frame><frame id="66" name="host_info" addr="0x7ff8178034a7"><binary ref="65"/></frame><frame id="67" name="__pthread_init" addr="0x7ff817838cf1"><binary id="68" name="libsystem_pthread.dylib" UUID="3A3FA85C-F1FE-336C-BF68-924FC947ADE3" arch="x86_64" load-addr="0x7ff817838000" path="/usr/lib/system/libsystem_pthread.dylib"/></frame><frame id="69" name="libSystem_initializer" addr="0x7ff8236a8827"><binary id="70" name="libSystem.B.dylib" UUID="417D430D-9D8D-3D77-9BEE-C1D8C89DB1A8" arch="x86_64" load-addr="0x7ff8236a7000" path="/usr/lib/libSystem.B.dylib"/></frame><frame id="71" name="invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const::$_0::operator()() const" addr="0x7ff8174fd3fb"><binary ref="12"/></frame><frame id="72" name="invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const" addr="0x7ff81753bb7a"><binary ref="12"/></frame><frame id="73" name="invocation function for block in dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const" addr="0x7ff81752ff22"><binary ref="12"/></frame><frame ref="28"/><frame id="74" name="dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const" addr="0x7ff81752f0bf"><binary ref="12"/></frame><frame id="75" name="dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const" addr="0x7ff81753b73a"><binary ref="12"/></frame><frame id="76" name="dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const" addr="0x7ff8174fa66c"><binary ref="12"/></frame><frame id="77" name="dyld4::PrebuiltLoader::runInitializers(dyld4::RuntimeState&amp;) const" addr="0x7ff8175031d4"><binary ref="12"/></frame><frame id="78" name="dyld4::APIs::runAllInitializersForMain()" addr="0x7ff81751bbdd"><binary ref="12"/></frame><frame id="79" name="dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*)" addr="0x7ff8174e5874"><binary ref="12"/></frame><frame ref="32"/></backtrace></row>
        <row><sample-time id="80" fmt="00:00.079.295">79295101</sample-time><thread ref="2"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="81"><frame id="82" name="__malloc_init" addr="0x7ff81767beda"><binary id="83" name="libsystem_malloc.dylib" UUID="6A31FB1A-ACB9-3228-AF11-BAD80316DF6D" arch="x86_64" load-addr="0x7ff81766d000" path="/usr/lib/system/libsystem_malloc.dylib"/></frame><frame id="84" name="libSystem_initializer" addr="0x7ff8236a885a"><binary ref="70"/></frame><frame ref="71"/><frame ref="72"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="75"/><frame ref="76"/><frame ref="77"/><frame ref="78"/><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="85" fmt="00:00.080.304">80304292</sample-time><thread ref="2"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="86"><frame id="87" name="_objc_init" addr="0x7ff8174a413f"><binary id="88" name="libobjc.A.dylib" UUID="461F6347-D5E0-306D-B68D-5EA48625C01E" arch="x86_64h" load-addr="0x7ff8174a2000" path="/usr/lib/libobjc.A.dylib"/></frame><frame id="89" name="_os_object_init" addr="0x7ff81769c6a9"><binary id="90" name="libdispatch.dylib" UUID="677AE7F7-158F-328B-85E2-8A960327856D" arch="x86_64" load-addr="0x7ff81769a000" path="/usr/lib/system/libdispatch.dylib"/></frame><frame id="91" name="libdispatch_init" addr="0x7ff8176aa567"><binary ref="90"/></frame><frame id="92" name="libSystem_initializer" addr="0x7ff8236a8898"><binary ref="70"/></frame><frame ref="71"/><frame ref="72"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="75"/><frame ref="76"/><frame ref="77"/><frame ref="78"/><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="93" fmt="00:00.081.295">81295274</sample-time><thread ref="2"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="94"><frame id="95" name="map_images_nolock" addr="0x7ff8174a4a67"><binary ref="88"/></frame><frame id="96" name="map_images" addr="0x7ff8174a460f"><binary ref="88"/></frame><frame id="97" name="invocation function for block in dyld4::RuntimeState::setObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*), void (*)(mach_header const*, void*, mach_header const*, void const*), void (*)(unsigned int, _dyld_objc_notify_mapped_info const*))::$_8::operator()() const" addr="0x7ff8174f3740"><binary ref="12"/></frame><frame id="98" name="dyld4::RuntimeState::withLoadersReadLock(void () block_pointer)" addr="0x7ff8174eb6d9"><binary ref="12"/></frame><frame id="99" name="dyld4::RuntimeState::setObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*), void (*)(mach_header const*, void*, mach_header const*, void const*), void (*)(unsigned int, _dyld_objc_notify_mapped_info const*))" addr="0x7ff8174f05db"><binary ref="12"/></frame><frame id="100" name="dyld4::APIs::_dyld_objc_register_callbacks(_dyld_objc_callbacks const*)" addr="0x7ff817516188"><binary ref="12"/></frame><frame id="101" name="_objc_init" addr="0x7ff8174a40cf"><binary ref="88"/></frame><frame ref="89"/><frame ref="91"/><frame ref="92"/><frame ref="71"/><frame ref="72"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="75"/><frame ref="76"/><frame ref="77"/><frame ref="78"/><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="102" fmt="00:00.082.294">82294717</sample-time><thread ref="2"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="103"><frame ref="64"/><frame id="104" name="task_get_special_port" addr="0x7ff8177ffa22"><binary ref="65"/></frame><frame id="105" name="_libxpc_initializer" addr="0x7ff81757c6fb"><binary id="106" name="libxpc.dylib" UUID="9BBB622B-62D4-3EE7-933C-69544F222DBB" arch="x86_64" load-addr="0x7ff81757b000" path="/usr/lib/system/libxpc.dylib"/></frame><frame id="107" name="libSystem_initializer" addr="0x7ff8236a88a8"><binary ref="70"/></frame><frame ref="71"/><frame ref="72"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="75"/><frame ref="76"/><frame ref="77"/><frame ref="78"/><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="108" fmt="00:00.083.294">83294643</sample-time><thread ref="2"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="109"><frame id="110" name="load_categories_nolock(header_info*)" addr="0x7ff8174c2144"><binary ref="88"/></frame><frame id="111" name="load_images" addr="0x7ff8174ac0db"><binary ref="88"/></frame><frame id="112" name="dyld4::RuntimeState::notifyObjCInit(dyld4::Loader const*)" addr="0x7ff8174f06d8"><binary ref="12"/></frame><frame id="113" name="dyld4::APIs::runAllInitializersForMain()" addr="0x7ff81751bc6f"><binary ref="12"/></frame><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="114" fmt="00:00.086.294">86294938</sample-time><thread ref="2"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="115"><frame id="116" name="__CFSearchStringROM" addr="0x7ff8178a0d72"><binary id="117" name="CoreFoundation" UUID="46F56317-E54F-30CA-83E3-516C8156327D" arch="x86_64h" load-addr="0x7ff81789d000" path="/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation"/></frame><frame id="118" name="__CFStringCreateImmutableFunnel3" addr="0x7ff8178a07c1"><binary ref="117"/></frame><frame id="119" name="CFStringCreateWithBytes" addr="0x7ff8178ada2d"><binary ref="117"/></frame><frame id="120" name="CreateStringFromFileSystemRepresentationByAddingPercentEscapes" addr="0x7ff8178ad971"><binary ref="117"/></frame><frame id="121" name="POSIXPathToURLPath" addr="0x7ff8178ad1d7"><binary ref="117"/></frame><frame id="122" name="_CFURLCreateWithFileSystemPath" addr="0x7ff8179b2820"><binary ref="117"/></frame><frame id="123" name="CFBundleGetMainBundle" addr="0x7ff8178a8d9a"><binary ref="117"/></frame><frame id="124" name="+[NSBundle mainBundle]" addr="0x7ff8187488f3"><binary id="125" name="Foundation" UUID="0CD9336A-BC14-3BC9-9FB9-58E87CA621BA" arch="x86_64" load-addr="0x7ff818745000" path="/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation"/></frame><frame id="126" name="+[NSApplication load]" addr="0x7ff81a978dc9"><binary id="127" name="AppKit" UUID="C5499C27-03C5-3194-815E-94CF6E6B68DB" arch="x86_64" load-addr="0x7ff81a976000" path="/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit"/></frame><frame id="128" name="load_images" addr="0x7ff8174ac59c"><binary ref="88"/></frame><frame ref="112"/><frame id="129" name="dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const" addr="0x7ff8174fa84f"><binary ref="12"/></frame><frame id="130" name="dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const" addr="0x7ff8174fa83d"><binary ref="12"/></frame><frame ref="130"/><frame ref="130"/><frame id="131" name="dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const::$_1::operator()() const" addr="0x7ff8174fd46f"><binary ref="12"/></frame><frame id="132" name="dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const" addr="0x7ff8174fa8f1"><binary ref="12"/></frame><frame id="133" name="dyld4::APIs::runAllInitializersForMain()" addr="0x7ff81751bcd2"><binary ref="12"/></frame><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="134" fmt="00:00.087.295">87295139</sample-time><thread ref="2"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="135"><frame id="136" name="__openat" addr="0x7ff8178009e7"><binary ref="65"/></frame><frame id="137" name="_os_trace_read_file_at" addr="0x7ff8175bf165"><binary id="138" name="libsystem_trace.dylib" UUID="101B76FE-DFFE-3437-903D-DE5AEA4FB606" arch="x86_64" load-addr="0x7ff8175bc000" path="/usr/lib/system/libsystem_trace.dylib"/></frame><frame id="139" name="_os_trace_read_plist_at" addr="0x7ff8175bf02c"><binary ref="138"/></frame><frame id="140" name="_os_log_preferences_refresh_process" addr="0x7ff8175bebf8"><binary ref="138"/></frame><frame id="141" name="os_log_create" addr="0x7ff8175bfb13"><binary ref="138"/></frame><frame id="142" name="___CFBundleLoadingLogger_block_invoke" addr="0x7ff8179a06d1"><binary ref="117"/></frame><frame id="143" name="_dispatch_client_callout" addr="0x7ff81769d033"><binary ref="90"/></frame><frame id="144" name="_dispatch_once_callout" addr="0x7ff81769e267"><binary ref="90"/></frame><frame id="145" name="_CFBundleLoadingLogger" addr="0x7ff8179c4408"><binary ref="117"/></frame><frame id="146" name="CFBundleGetMainBundle" addr="0x7ff8178a8df7"><binary ref="117"/></frame><frame ref="124"/><frame ref="126"/><frame ref="128"/><frame ref="112"/><frame ref="129"/><frame ref="130"/><frame ref="130"/><frame ref="130"/><frame ref="131"/><frame ref="132"/><frame ref="133"/><frame ref="79"/><frame ref="32"/></backtrace></row>
        <row><sample-time id="147" fmt="00:00.088.294">88294703</sample-time><thread id="148" fmt="_pthread_start  0xe787d (java, pid: 23369)"><tid id="149" fmt="0xe787d">948349</tid><process ref="4"/></thread><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="150"><frame id="151" name="__open" addr="0x7ff817549e73"><binary ref="12"/></frame><frame id="152" name="open_with_subsystem" addr="0x7ff817541c8c"><binary ref="12"/></frame><frame id="153" name="dyld3::open(char const*, int, int)" addr="0x7ff81752de02"><binary ref="12"/></frame><frame id="154" name="dyld4::SyscallDelegate::realpath(char const*, char*) const" addr="0x7ff817507c16"><binary ref="12"/></frame><frame id="155" name="dyld4::ProcessConfig::canonicalDylibPathInCache(char const*) const" addr="0x7ff8174eaf48"><binary ref="12"/></frame><frame id="156" name="dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;)" addr="0x7ff8174f76a1"><binary ref="12"/></frame><frame id="157" name="dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator()() const" addr="0x7ff81751c343"><binary ref="12"/></frame><frame id="158" name="dyld4::APIs::dlopen_from(char const*, int, void*)" addr="0x7ff817517370"><binary ref="12"/></frame><frame id="159" name="LoadJavaVM" addr="0x109e502ee"><binary id="160" name="libjli.dylib" UUID="5A374700-9DB8-31DE-A6A3-7859E65688D4" arch="x86_64" load-addr="0x109e49000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/libjli.dylib"/></frame><frame id="161" name="JLI_Launch" addr="0x109e4b94c"><binary ref="160"/></frame><frame id="162" name="main" addr="0x109de7bfe"><binary id="163" name="java" UUID="643046EF-C8E4-343E-BF97-AF35D8BFFB64" arch="x86_64" load-addr="0x109de7000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/bin/java"/></frame><frame id="164" name="apple_main" addr="0x109e50d44"><binary ref="160"/></frame><frame id="165" name="_pthread_start" addr="0x7ff81783e1d3"><binary ref="68"/></frame><frame id="166" name="thread_start" addr="0x7ff817839bd3"><binary ref="68"/></frame></backtrace></row>
        <row><sample-time id="167" fmt="00:00.089.294">89294892</sample-time><thread ref="148"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="168"><frame id="169" name="dyld3::MachOFile::trieWalk(Diagnostics&amp;, unsigned char const*, unsigned char const*, char const*)" addr="0x7ff817530f62"><binary ref="12"/></frame><frame id="170" name="dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const" addr="0x7ff8174fb672"><binary ref="12"/></frame><frame ref="44"/><frame ref="45"/><frame ref="46"/><frame ref="47"/><frame ref="48"/><frame ref="49"/><frame ref="50"/><frame ref="51"/><frame ref="52"/><frame ref="53"/><frame id="171" name="dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator()() const" addr="0x7ff81751c59d"><binary ref="12"/></frame><frame ref="158"/><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="172" fmt="00:00.090.294">90294703</sample-time><thread ref="148"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="173"><frame id="174" name="invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa2a6"><binary ref="12"/></frame><frame id="175" name="dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const" addr="0x7ff81753f353"><binary ref="12"/></frame><frame id="176" name="dyld3::MachOAnalyzer::forEachRebaseLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, bool&amp;) block_pointer) const" addr="0x7ff81753f0f0"><binary ref="12"/></frame><frame id="177" name="dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa07f"><binary ref="12"/></frame><frame id="178" name="dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool) const" addr="0x7ff8174ff249"><binary ref="12"/></frame><frame ref="171"/><frame ref="158"/><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="179" fmt="00:00.091.294">91294687</sample-time><thread ref="148"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="180"><frame id="181" name="invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa2ca"><binary ref="12"/></frame><frame id="182" name="dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const" addr="0x7ff81753f2d9"><binary ref="12"/></frame><frame ref="176"/><frame ref="177"/><frame ref="178"/><frame ref="171"/><frame ref="158"/><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="183" fmt="00:00.092.294">92294537</sample-time><thread ref="148"/><process ref="4"/><core id="184" fmt="CPU 4">4</core><thread-state ref="8"/><weight ref="9"/><backtrace id="185"><frame ref="57"/><frame id="186" name="dyld3::ScopedTimer::startTimer()" addr="0x7ff8174df7c7"><binary ref="12"/></frame><frame id="187" name="invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const::$_0::operator()() const" addr="0x7ff8174fd3dd"><binary ref="12"/></frame><frame id="188" name="invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const" addr="0x7ff81753b9de"><binary ref="12"/></frame><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame id="189" name="dyld3::MachOFile::forEachInitializerPointerSection(Diagnostics&amp;, void (unsigned int, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81753175e"><binary ref="12"/></frame><frame id="190" name="dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const" addr="0x7ff81753b6ea"><binary ref="12"/></frame><frame ref="76"/><frame id="191" name="dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const" addr="0x7ff8174fa85a"><binary ref="12"/></frame><frame ref="131"/><frame ref="132"/><frame id="192" name="dyld4::APIs::dlopen_from(char const*, int, void*)" addr="0x7ff8175173f6"><binary ref="12"/></frame><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="193" fmt="00:00.093.294">93294653</sample-time><thread ref="148"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="194"><frame id="195" name="__cxx_global_var_init.7" addr="0x10b2e92a1"><binary id="196" name="libjvm.dylib" UUID="C7C3D413-8BD5-3D4F-BB6A-96867BF8C3D6" arch="x86_64" load-addr="0x10aff0000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/server/libjvm.dylib"/></frame><frame ref="188"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="189"/><frame ref="190"/><frame ref="76"/><frame ref="191"/><frame ref="131"/><frame ref="132"/><frame ref="192"/><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="197" fmt="00:00.094.294">94294333</sample-time><thread ref="148"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="198"><frame ref="57"/><frame id="199" name="dyld3::ScopedTimer::endTimer()" addr="0x7ff8174df9ee"><binary ref="12"/></frame><frame id="200" name="invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const::$_0::operator()() const" addr="0x7ff8174fd403"><binary ref="12"/></frame><frame ref="188"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="189"/><frame ref="190"/><frame ref="76"/><frame ref="191"/><frame ref="131"/><frame ref="132"/><frame ref="192"/><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="201" fmt="00:00.095.294">95294688</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="198"/></row>
        <row><sample-time id="202" fmt="00:00.096.294">96294106</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="185"/></row>
        <row><sample-time id="203" fmt="00:00.097.294">97294341</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="204"><frame id="205" name="__cxx_global_var_init.4" addr="0x10b552731"><binary ref="196"/></frame><frame ref="188"/><frame ref="73"/><frame ref="28"/><frame ref="74"/><frame ref="189"/><frame ref="190"/><frame ref="76"/><frame ref="191"/><frame ref="131"/><frame ref="132"/><frame ref="192"/><frame ref="159"/><frame ref="161"/><frame ref="162"/><frame ref="164"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="206" fmt="00:00.098.294">98294067</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="185"/></row>
        <row><sample-time id="207" fmt="00:00.099.294">99294274</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="185"/></row>
        <row><sample-time id="208" fmt="00:00.100.294">100294275</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="198"/></row>
        <row><sample-time id="209" fmt="00:00.101.294">101294038</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="185"/></row>
        <row><sample-time id="210" fmt="00:00.102.293">102293985</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="185"/></row>
        <row><sample-time id="211" fmt="00:00.103.294">103294257</sample-time><thread ref="148"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="198"/></row>
        <row><sample-time id="212" fmt="00:00.104.294">104294473</sample-time><thread id="213" fmt="ThreadJavaMain  0xe787e (java, pid: 23369)"><tid id="214" fmt="0xe787e">948350</tid><process ref="4"/></thread><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="215"><frame id="216" name="dyld3::MachOLoaded::findClosestSymbol(unsigned long long, char const**, unsigned long long*) const" addr="0x7ff817534971"><binary ref="12"/></frame><frame id="217" name="dyld4::APIs::dladdr(void const*, dl_info*)" addr="0x7ff817516a38"><binary ref="12"/></frame><frame id="218" name="os::jvm_path(char*, int)" addr="0x10b8a0b84"><binary ref="196"/></frame><frame id="219" name="os::init_system_properties_values()" addr="0x10b8a0921"><binary ref="196"/></frame><frame id="220" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d298"><binary ref="196"/></frame><frame id="221" name="JNI_CreateJavaVM" addr="0x10b586f45"><binary ref="196"/></frame><frame id="222" name="JavaMain" addr="0x109e4d4e2"><binary ref="160"/></frame><frame id="223" name="ThreadJavaMain" addr="0x109e50629"><binary ref="160"/></frame><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="224" fmt="00:00.105.315">105315660</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="225"><frame id="226" name="dyld3::MachOFile::trieWalk(Diagnostics&amp;, unsigned char const*, unsigned char const*, char const*)" addr="0x7ff817530f92"><binary ref="12"/></frame><frame ref="170"/><frame ref="44"/><frame ref="45"/><frame ref="46"/><frame ref="47"/><frame ref="48"/><frame ref="49"/><frame ref="50"/><frame ref="51"/><frame ref="52"/><frame ref="53"/><frame ref="171"/><frame ref="158"/><frame id="227" name="os::dll_load(char const*, char*, int)" addr="0x10b8a1e4f"><binary ref="196"/></frame><frame id="228" name="ClassLoader::load_jimage_library()" addr="0x10b2e0743"><binary ref="196"/></frame><frame id="229" name="ClassLoader::lookup_vm_options()" addr="0x10b2e2363"><binary ref="196"/></frame><frame id="230" name="Arguments::parse(JavaVMInitArgs const*)" addr="0x10b159dc0"><binary ref="196"/></frame><frame id="231" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d2b6"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="232" fmt="00:00.106.316">106316998</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="233"><frame ref="64"/><frame id="234" name="mach_msg_overwrite" addr="0x7ff8178065f4"><binary ref="65"/></frame><frame id="235" name="mach_msg" addr="0x7ff8177ff8aa"><binary ref="65"/></frame><frame id="236" name="notify_register_check" addr="0x7ff81a915230"><binary id="237" name="libsystem_notify.dylib" UUID="765F61AC-BD8B-3A9A-97A4-3C5D3356B072" arch="x86_64" load-addr="0x7ff81a914000" path="/usr/lib/system/libsystem_notify.dylib"/></frame><frame id="238" name="__si_module_static_ds_block_invoke" addr="0x7ff817873c3f"><binary id="239" name="libsystem_info.dylib" UUID="16694AFC-0A11-3BEE-B3B6-84C718DBD550" arch="x86_64" load-addr="0x7ff817872000" path="/usr/lib/system/libsystem_info.dylib"/></frame><frame ref="143"/><frame ref="144"/><frame id="240" name="si_module_static_ds" addr="0x7ff817873ba3"><binary ref="239"/></frame><frame id="241" name="si_module_with_name" addr="0x7ff8178735f9"><binary ref="239"/></frame><frame id="242" name="si_module_config_modules_for_category" addr="0x7ff817873a81"><binary ref="239"/></frame><frame id="243" name="__si_module_static_search_block_invoke" addr="0x7ff8178736fe"><binary ref="239"/></frame><frame ref="143"/><frame ref="144"/><frame id="244" name="si_module_static_search" addr="0x7ff817873668"><binary ref="239"/></frame><frame ref="241"/><frame id="245" name="getpwuid_r" addr="0x7ff8178768f4"><binary ref="239"/></frame><frame id="246" name="PerfMemory::create_memory_region(unsigned long)" addr="0x10b8d9641"><binary ref="196"/></frame><frame id="247" name="PerfMemory::initialize()" addr="0x10b8d9190"><binary ref="196"/></frame><frame id="248" name="vm_init_globals()" addr="0x10b4ec157"><binary ref="196"/></frame><frame id="249" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d3a5"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="250" fmt="00:00.108.295">108295129</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="251"><frame id="252" name="nanov2_malloc_zero_on_alloc" addr="0x7ff81768883e"><binary ref="83"/></frame><frame id="253" name="os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&amp;)" addr="0x10b89ce31"><binary ref="196"/></frame><frame id="254" name="AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)" addr="0x10b146e67"><binary ref="196"/></frame><frame id="255" name="os::PlatformMutex::PlatformMutex()" addr="0x10b8a9064"><binary ref="196"/></frame><frame id="256" name="ObjectSynchronizer::initialize()" addr="0x10ba501b1"><binary ref="196"/></frame><frame id="257" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d5b0"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="258" fmt="00:00.109.295">109295469</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="259"><frame id="260" name="dyld3::MachOAnalyzer::forEachBind_OpcodesLazy(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, dyld3::MachOFile::SegmentInfo const*, bool, bool, unsigned int, int, unsigned int, unsigned char, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const" addr="0x7ff81753dfb7"><binary ref="12"/></frame><frame id="261" name="dyld3::MachOAnalyzer::forEachBindUnified_Opcodes(Diagnostics&amp;, bool, void (unsigned long long, dyld3::MachOAnalyzer::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (unsigned long long, dyld3::MachOAnalyzer::BindTargetInfo const&amp;, bool&amp;) block_pointer) const" addr="0x7ff81753d6b0"><binary ref="12"/></frame><frame id="262" name="dyld3::MachOAnalyzer::forEachBindLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, unsigned int, bool&amp;) block_pointer, void (unsigned long long, unsigned int, bool&amp;) block_pointer) const" addr="0x7ff81753ef8d"><binary ref="12"/></frame><frame id="263" name="dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const" addr="0x7ff8174fa11e"><binary ref="12"/></frame><frame ref="178"/><frame ref="171"/><frame ref="158"/><frame ref="227"/><frame id="264" name="os::native_java_library()" addr="0x10b89c996"><binary ref="196"/></frame><frame id="265" name="ClassLoader::load_java_library()" addr="0x10b2dfcd1"><binary ref="196"/></frame><frame id="266" name="ClassLoader::initialize(JavaThread*)" addr="0x10b2e2292"><binary ref="196"/></frame><frame id="267" name="classLoader_init1()" addr="0x10b2e268b"><binary ref="196"/></frame><frame id="268" name="init_globals()" addr="0x10b4ec17a"><binary ref="196"/></frame><frame id="269" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d5b5"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="270" fmt="00:00.110.294">110294965</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="271"><frame id="272" name="_platform_bzero$VARIANT$Haswell" addr="0x7ff817868eb5"><binary id="273" name="libsystem_platform.dylib" UUID="F1798256-C6B5-335C-BBB5-7978ACF41DEB" arch="x86_64" load-addr="0x7ff817868000" path="/usr/lib/system/libsystem_platform.dylib"/></frame><frame id="274" name="G1BiasedMappedArrayBase::create_new_base_array(unsigned long, unsigned long)" addr="0x10b405df5"><binary ref="196"/></frame><frame id="275" name="G1CollectedHeap::initialize()" addr="0x10b40fac9"><binary ref="196"/></frame><frame id="276" name="universe_init()" addr="0x10bac9649"><binary ref="196"/></frame><frame id="277" name="init_globals()" addr="0x10b4ec193"><binary ref="196"/></frame><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="278" fmt="00:00.111.295">111295250</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="279"><frame id="280" name="nanov2_malloc_zero_on_alloc" addr="0x7ff817688823"><binary ref="83"/></frame><frame ref="253"/><frame ref="254"/><frame id="281" name="HeapRegion::HeapRegion(unsigned int, G1BlockOffsetTable*, MemRegion)" addr="0x10b4cbf2b"><binary ref="196"/></frame><frame id="282" name="G1CollectedHeap::new_heap_region(unsigned int, MemRegion)" addr="0x10b40b700"><binary ref="196"/></frame><frame id="283" name="HeapRegionManager::expand(unsigned int, unsigned int, WorkGang*)" addr="0x10b4d179a"><binary ref="196"/></frame><frame id="284" name="HeapRegionManager::expand_by(unsigned int, WorkGang*)" addr="0x10b4d2278"><binary ref="196"/></frame><frame id="285" name="G1CollectedHeap::expand(unsigned long, WorkGang*, double*)" addr="0x10b40e141"><binary ref="196"/></frame><frame id="286" name="G1CollectedHeap::initialize()" addr="0x10b40fca7"><binary ref="196"/></frame><frame ref="276"/><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="287" fmt="00:00.115.295">115295037</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="288"><frame id="289" name="SharedDataRelocator::do_bit(unsigned long)" addr="0x10b3ed41d"><binary ref="196"/></frame><frame id="290" name="FileMapInfo::relocate_pointers_in_core_regions(long)" addr="0x10b3f1fdf"><binary ref="196"/></frame><frame id="291" name="FileMapInfo::map_regions(int*, int, char*, ReservedSpace)" addr="0x10b3f1c68"><binary ref="196"/></frame><frame id="292" name="MetaspaceShared::map_archive(FileMapInfo*, char*, ReservedSpace)" addr="0x10b83ea92"><binary ref="196"/></frame><frame id="293" name="MetaspaceShared::map_archives(FileMapInfo*, FileMapInfo*, bool)" addr="0x10b83e3bb"><binary ref="196"/></frame><frame id="294" name="MetaspaceShared::initialize_runtime_shared_and_meta_spaces()" addr="0x10b83df9b"><binary ref="196"/></frame><frame id="295" name="Metaspace::global_initialize()" addr="0x10b837624"><binary ref="196"/></frame><frame id="296" name="universe_init()" addr="0x10bac9683"><binary ref="196"/></frame><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="297" fmt="00:00.119.295">119295261</sample-time><thread ref="213"/><process ref="4"/><core ref="17"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="298" fmt="00:00.124.294">124294820</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="299" fmt="00:00.125.294">125294853</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="300" fmt="00:00.126.295">126295209</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="301" fmt="00:00.129.295">129295019</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="302" fmt="00:00.131.294">131294757</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="303"><frame id="304" name="SharedDataRelocator::do_bit(unsigned long)" addr="0x10b3ed421"><binary ref="196"/></frame><frame ref="290"/><frame ref="291"/><frame ref="292"/><frame ref="293"/><frame ref="294"/><frame ref="295"/><frame ref="296"/><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="305" fmt="00:00.137.295">137295114</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="306" fmt="00:00.138.294">138294753</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="307" fmt="00:00.139.294">139294868</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="308" fmt="00:00.140.294">140294594</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="309" fmt="00:00.141.295">141295175</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="310" fmt="00:00.144.295">144295059</sample-time><thread ref="213"/><process ref="4"/><core ref="17"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="311" fmt="00:00.150.294">150294905</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="312"><frame id="313" name="FileMapInfo::relocate_pointers_in_core_regions(long)" addr="0x10b3f1fe3"><binary ref="196"/></frame><frame ref="291"/><frame ref="292"/><frame ref="293"/><frame ref="294"/><frame ref="295"/><frame ref="296"/><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="314" fmt="00:00.153.294">153294912</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="315" fmt="00:00.157.294">157294835</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="316" fmt="00:00.158.294">158294677</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="317"><frame id="318" name="FileMapInfo::relocate_pointers_in_core_regions(long)" addr="0x10b3f1fe8"><binary ref="196"/></frame><frame ref="291"/><frame ref="292"/><frame ref="293"/><frame ref="294"/><frame ref="295"/><frame ref="296"/><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="319" fmt="00:00.159.294">159294575</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="320" fmt="00:00.162.294">162294800</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="321" fmt="00:00.166.294">166294717</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="322" fmt="00:00.169.294">169294571</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="323"><frame id="324" name="FileMapInfo::relocate_pointers_in_core_regions(long)" addr="0x10b3f1fb5"><binary ref="196"/></frame><frame ref="291"/><frame ref="292"/><frame ref="293"/><frame ref="294"/><frame ref="295"/><frame ref="296"/><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="325" fmt="00:00.173.295">173295280</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="326" fmt="00:00.184.295">184295451</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="327" fmt="00:00.185.294">185294951</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="328" fmt="00:00.192.295">192295491</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="288"/></row>
        <row><sample-time id="329" fmt="00:00.195.295">195295577</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="330"><frame id="331" name="__mmap" addr="0x7ff8178000b3"><binary ref="65"/></frame><frame id="332" name="os::pd_map_memory(int, char const*, unsigned long, char*, unsigned long, bool, bool)" addr="0x10b8a3936"><binary ref="196"/></frame><frame id="333" name="os::map_memory(int, char const*, unsigned long, char*, unsigned long, bool, bool, MEMFLAGS)" addr="0x10b89fc10"><binary ref="196"/></frame><frame id="334" name="FileMapInfo::map_heap_data(MemRegion**, int, int, int*, bool)" addr="0x10b3f2dd4"><binary ref="196"/></frame><frame id="335" name="FileMapInfo::map_heap_regions_impl()" addr="0x10b3f2a8c"><binary ref="196"/></frame><frame id="336" name="FileMapInfo::map_heap_regions()" addr="0x10b3f2f47"><binary ref="196"/></frame><frame id="337" name="MetaspaceShared::map_archives(FileMapInfo*, FileMapInfo*, bool)" addr="0x10b83e59a"><binary ref="196"/></frame><frame ref="294"/><frame ref="295"/><frame ref="296"/><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="338" fmt="00:00.196.295">196295069</sample-time><thread ref="213"/><process ref="4"/><core ref="17"/><thread-state ref="8"/><weight ref="9"/><backtrace id="339"><frame id="340" name="PatchEmbeddedPointers::do_bit(unsigned long)" addr="0x10b4daa7f"><binary ref="196"/></frame><frame id="341" name="HeapShared::patch_archived_heap_embedded_pointers(MemRegion, unsigned char*, unsigned long)" addr="0x10b4da2ab"><binary ref="196"/></frame><frame id="342" name="FileMapInfo::patch_archived_heap_embedded_pointers()" addr="0x10b3f3002"><binary ref="196"/></frame><frame id="343" name="MetaspaceShared::initialize_shared_spaces()" addr="0x10b83ec8f"><binary ref="196"/></frame><frame id="344" name="universe_init()" addr="0x10bac97a5"><binary ref="196"/></frame><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="345" fmt="00:00.197.294">197294722</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="346"><frame id="347" name="ConcurrentHashTable&lt;StringTableConfig, (MEMFLAGS)10&gt;::ConcurrentHashTable(unsigned long, unsigned long, unsigned long, void*)" addr="0x10b9f3ce4"><binary ref="196"/></frame><frame id="348" name="StringTable::create_table()" addr="0x10b9f1108"><binary ref="196"/></frame><frame id="349" name="universe_init()" addr="0x10bac97b1"><binary ref="196"/></frame><frame ref="277"/><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="350" fmt="00:00.198.295">198295072</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="351"><frame id="352" name="PackageEntryTable::lookup_only(Symbol*)" addr="0x10b8b6b57"><binary ref="196"/></frame><frame id="353" name="InstanceKlass::set_package(ClassLoaderData*, PackageEntry*, JavaThread*)" addr="0x10b4f3e7d"><binary ref="196"/></frame><frame id="354" name="InstanceKlass::restore_unshareable_info(ClassLoaderData*, Handle, PackageEntry*, JavaThread*)" addr="0x10b4f3bc8"><binary ref="196"/></frame><frame id="355" name="vmClasses::resolve_shared_class(InstanceKlass*, ClassLoaderData*, Handle, JavaThread*)" addr="0x10bb0bf0d"><binary ref="196"/></frame><frame id="356" name="vmClasses::resolve_all(JavaThread*)" addr="0x10bb0c761"><binary ref="196"/></frame><frame id="357" name="SystemDictionary::initialize(JavaThread*)" addr="0x10ba582a4"><binary ref="196"/></frame><frame id="358" name="Universe::genesis(JavaThread*)" addr="0x10bac7a04"><binary ref="196"/></frame><frame id="359" name="universe2_init()" addr="0x10baca08b"><binary ref="196"/></frame><frame id="360" name="init_globals()" addr="0x10b4ec1c5"><binary ref="196"/></frame><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="361" fmt="00:00.199.294">199294959</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="362"><frame id="363" name="DispatchTable::set_entry(int, EntryPoint&amp;)" addr="0x10ba65d67"><binary ref="196"/></frame><frame id="364" name="TemplateInterpreterGenerator::generate_all()" addr="0x10ba67d6f"><binary ref="196"/></frame><frame id="365" name="TemplateInterpreter::initialize_code()" addr="0x10ba6581d"><binary ref="196"/></frame><frame id="366" name="interpreter_init_code()" addr="0x10b505bfb"><binary ref="196"/></frame><frame id="367" name="init_globals()" addr="0x10b4ec1cf"><binary ref="196"/></frame><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="368" fmt="00:00.200.295">200295017</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="369"><frame id="370" name="Assembler::jmp_literal(unsigned char*, RelocationHolder const&amp;)" addr="0x10b169fb1"><binary ref="196"/></frame><frame id="371" name="MethodHandles::jump_from_method_handle(MacroAssembler*, RegisterImpl*, RegisterImpl*, bool)" addr="0x10b856532"><binary ref="196"/></frame><frame id="372" name="MethodHandles::jump_to_lambda_form(MacroAssembler*, RegisterImpl*, RegisterImpl*, RegisterImpl*, bool)" addr="0x10b856b54"><binary ref="196"/></frame><frame id="373" name="MethodHandles::generate_method_handle_interpreter_entry(MacroAssembler*, vmIntrinsicID)" addr="0x10b856f93"><binary ref="196"/></frame><frame id="374" name="MethodHandlesAdapterGenerator::generate()" addr="0x10b850077"><binary ref="196"/></frame><frame id="375" name="MethodHandles::generate_adapters()" addr="0x10b84feb9"><binary ref="196"/></frame><frame id="376" name="init_globals()" addr="0x10b4ec229"><binary ref="196"/></frame><frame ref="269"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="377" fmt="00:00.201.294">201294814</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="378"><frame id="379" name="tlv_get_addr" addr="0x7ff817845622"><binary id="380" name="libdyld.dylib" UUID="F8204E60-E41D-36F5-81F3-EDAD68166C1D" arch="x86_64" load-addr="0x7ff817844000" path="/usr/lib/system/libdyld.dylib"/></frame><frame id="381" name="SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*)" addr="0x10ba574c3"><binary ref="196"/></frame><frame id="382" name="SystemDictionary::load_instance_class(unsigned int, Symbol*, Handle, JavaThread*)" addr="0x10ba55f55"><binary ref="196"/></frame><frame id="383" name="SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*)" addr="0x10ba5540a"><binary ref="196"/></frame><frame id="384" name="SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*)" addr="0x10ba549dd"><binary ref="196"/></frame><frame id="385" name="ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*)" addr="0x10b343832"><binary ref="196"/></frame><frame id="386" name="ConstantPool::klass_ref_at(int, JavaThread*)" addr="0x10b344429"><binary ref="196"/></frame><frame id="387" name="LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, JavaThread*)" addr="0x10b72608c"><binary ref="196"/></frame><frame id="388" name="LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*)" addr="0x10b72b125"><binary ref="196"/></frame><frame id="389" name="InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code)" addr="0x10b50b6cf"><binary ref="196"/></frame><frame id="390" name="InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)" addr="0x10b50bd76"><binary ref="196"/></frame><frame id="391" name="0x11b0fbc25" addr="0x11b0fbc25"/><frame id="392" name="0x11b0e2cc9" addr="0x11b0e2cc9"/><frame id="393" name="JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, JavaThread*)" addr="0x10b5125a6"><binary ref="196"/></frame><frame id="394" name="InstanceKlass::call_class_initializer(JavaThread*)" addr="0x10b4effa4"><binary ref="196"/></frame><frame id="395" name="InstanceKlass::initialize_impl(JavaThread*)" addr="0x10b4eefc6"><binary ref="196"/></frame><frame id="396" name="LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, JavaThread*)" addr="0x10b728e23"><binary ref="196"/></frame><frame id="397" name="LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*)" addr="0x10b72b140"><binary ref="196"/></frame><frame ref="389"/><frame ref="390"/><frame id="398" name="0x11b0fbc17" addr="0x11b0fbc17"/><frame ref="392"/><frame ref="393"/><frame ref="394"/><frame ref="395"/><frame id="399" name="InstanceKlass::initialize_impl(JavaThread*)" addr="0x10b4eeceb"><binary ref="196"/></frame><frame ref="399"/><frame id="400" name="Threads::initialize_java_lang_classes(JavaThread*, JavaThread*)" addr="0x10ba9c90b"><binary ref="196"/></frame><frame id="401" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d79c"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="402" fmt="00:00.202.294">202294878</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="403"><frame id="404" name="AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ull&gt;::oop_access_barrier(void*)" addr="0x10aff2a18"><binary ref="196"/></frame><frame id="405" name="ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*)" addr="0x10b343853"><binary ref="196"/></frame><frame ref="386"/><frame ref="387"/><frame ref="388"/><frame ref="389"/><frame ref="390"/><frame ref="391"/><frame id="406" name="0x11b0eb23e" addr="0x11b0eb23e"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="394"/><frame ref="395"/><frame ref="399"/><frame ref="399"/><frame ref="400"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="407" fmt="00:00.203.295">203295081</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="408"><frame id="409" name="fstatfs$INODE64" addr="0x7ff817800c7f"><binary ref="65"/></frame><frame id="410" name="__opendir2$INODE64" addr="0x7ff8176eb863"><binary id="411" name="libsystem_c.dylib" UUID="D5B303AD-54F4-323B-BBE2-2D0F34C45649" arch="x86_64" load-addr="0x7ff8176e5000" path="/usr/lib/system/libsystem_c.dylib"/></frame><frame id="412" name="_CFIterateDirectory" addr="0x7ff8178b609b"><binary ref="117"/></frame><frame id="413" name="_CFBundleGetBundleVersionForURL" addr="0x7ff8178b571f"><binary ref="117"/></frame><frame id="414" name="_CFBundleCreate" addr="0x7ff8179b2f4a"><binary ref="117"/></frame><frame id="415" name="_CFCopyLocalizedVersionKey" addr="0x7ff81790429f"><binary ref="117"/></frame><frame id="416" name="_CFCopyVersionDictionary" addr="0x7ff817903fd6"><binary ref="117"/></frame><frame id="417" name="___CFCopySystemVersionDictionary_block_invoke" addr="0x7ff817903f09"><binary ref="117"/></frame><frame ref="143"/><frame ref="144"/><frame id="418" name="_CFCopySystemVersionDictionary" addr="0x7ff817903edf"><binary ref="117"/></frame><frame id="419" name="_CFCopySystemVersionDictionaryValue" addr="0x7ff817974cd9"><binary ref="117"/></frame><frame id="420" name="___CFOperatingSystemVersionGetCurrent_block_invoke" addr="0x7ff817974bba"><binary ref="117"/></frame><frame ref="143"/><frame ref="144"/><frame id="421" name="_CFOperatingSystemVersionGetCurrent" addr="0x7ff817974b8b"><binary ref="117"/></frame><frame id="422" name="-[NSProcessInfo operatingSystemVersion]" addr="0x7ff8187e5fb2"><binary ref="125"/></frame><frame id="423" name="__invoking___" addr="0x7ff8178fdc8c"><binary ref="117"/></frame><frame id="424" name="-[NSInvocation invoke]" addr="0x7ff8178fdb21"><binary ref="117"/></frame><frame id="425" name="-[NSInvocation invokeWithTarget:]" addr="0x7ff81792d109"><binary ref="117"/></frame><frame id="426" name="setOSNameAndVersion" addr="0x109f09dbe"><binary id="427" name="libjava.dylib" UUID="B5EF1A5F-95C2-36FF-9C61-AEBE7365B6B4" arch="x86_64" load-addr="0x109efe000" path="/Users/fzhinkin/.sdkman/candidates/java/17.0.8.1-librca/lib/libjava.dylib"/></frame><frame id="428" name="GetJavaProperties" addr="0x109f0a855"><binary ref="427"/></frame><frame id="429" name="Java_jdk_internal_util_SystemProps_00024Raw_platformProperties" addr="0x109f04f36"><binary ref="427"/></frame><frame id="430" name="0x11b0ef53a" addr="0x11b0ef53a"/><frame ref="406"/><frame id="431" name="0x11b0eb42b" addr="0x11b0eb42b"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame id="432" name="JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)" addr="0x10b511c51"><binary ref="196"/></frame><frame id="433" name="JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaThread*)" addr="0x10b511ce2"><binary ref="196"/></frame><frame id="434" name="Threads::initialize_java_lang_classes(JavaThread*, JavaThread*)" addr="0x10ba9c97b"><binary ref="196"/></frame><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="435" fmt="00:00.204.307">204307749</sample-time><thread id="436" fmt="_dispatch_worker_thread2  0xe7887 (java, pid: 23369)"><tid id="437" fmt="0xe7887">948359</tid><process ref="4"/></thread><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="438"><frame id="439" name="_platform_memmove$VARIANT$Haswell" addr="0x7ff8178689c1"><binary ref="273"/></frame><frame id="440" name="_xpc_Block_copy_impl" addr="0x7ff817584a8d"><binary ref="106"/></frame><frame id="441" name="xpc_connection_set_event_handler" addr="0x7ff8175849ca"><binary ref="106"/></frame><frame id="442" name="-[_CFXPreferences _setupNewDaemonConnection:invalidationHandler:]" addr="0x7ff817a5d63e"><binary ref="117"/></frame><frame id="443" name="-[_CFXPreferences _copyDaemonConnectionSettingUpIfNecessaryForRole:andUserIdentifier:]" addr="0x7ff817a5deef"><binary ref="117"/></frame><frame id="444" name="-[_CFXPreferences withConnectionForRole:andUserIdentifier:performBlock:]" addr="0x7ff817a5b842"><binary ref="117"/></frame><frame id="445" name="__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke" addr="0x7ff817a35b8f"><binary ref="117"/></frame><frame id="446" name="_dispatch_client_callout2" addr="0x7ff81769d066"><binary ref="90"/></frame><frame id="447" name="_dispatch_apply_invoke" addr="0x7ff8176aee09"><binary ref="90"/></frame><frame ref="143"/><frame id="448" name="_dispatch_root_queue_drain" addr="0x7ff8176ad0f6"><binary ref="90"/></frame><frame id="449" name="_dispatch_worker_thread2" addr="0x7ff8176ad768"><binary ref="90"/></frame><frame id="450" name="_pthread_wqthread" addr="0x7ff81783ac0f"><binary ref="68"/></frame><frame id="451" name="start_wqthread" addr="0x7ff817839bbf"><binary ref="68"/></frame></backtrace></row>
        <row><sample-time id="452" fmt="00:00.204.307">204307943</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="453"><frame ref="64"/><frame id="454" name="_dispatch_mach_msg_send" addr="0x7ff8176b99f3"><binary ref="90"/></frame><frame id="455" name="_dispatch_mach_msg_send" addr="0x7ff8176b9d74"><binary ref="90"/></frame><frame id="456" name="_dispatch_mach_send_drain" addr="0x7ff8176b9186"><binary ref="90"/></frame><frame id="457" name="_dispatch_mach_send_msg" addr="0x7ff8176b5b33"><binary ref="90"/></frame><frame id="458" name="_dispatch_mach_send_and_wait_for_reply" addr="0x7ff8176b5d9f"><binary ref="90"/></frame><frame id="459" name="dispatch_mach_send_with_result_and_wait_for_reply" addr="0x7ff8176b6273"><binary ref="90"/></frame><frame id="460" name="xpc_connection_send_message_with_reply_sync" addr="0x7ff817585b97"><binary ref="106"/></frame><frame id="461" name="__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke_2" addr="0x7ff817a35bc6"><binary ref="117"/></frame><frame id="462" name="-[_CFXPreferences withConnectionForRole:andUserIdentifier:performBlock:]" addr="0x7ff817a5b84f"><binary ref="117"/></frame><frame ref="445"/><frame ref="446"/><frame id="463" name="_dispatch_apply_invoke_and_wait" addr="0x7ff8176b018f"><binary ref="90"/></frame><frame id="464" name="_dispatch_apply_with_attr_f" addr="0x7ff8176af692"><binary ref="90"/></frame><frame id="465" name="dispatch_apply" addr="0x7ff8176af847"><binary ref="90"/></frame><frame id="466" name="__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke.75" addr="0x7ff817a35c55"><binary ref="117"/></frame><frame id="467" name="CFPREFERENCES_IS_WAITING_FOR_SYSTEM_AND_USER_CFPREFSDS" addr="0x7ff8178d3776"><binary ref="117"/></frame><frame id="468" name="-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]" addr="0x7ff817a3504a"><binary ref="117"/></frame><frame id="469" name="-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]" addr="0x7ff8178d20b9"><binary ref="117"/></frame><frame id="470" name="-[CFPrefsSearchListSource alreadylocked_getDictionary:]" addr="0x7ff8178d1dec"><binary ref="117"/></frame><frame id="471" name="-[CFPrefsSearchListSource alreadylocked_copyValueForKey:]" addr="0x7ff8178d19b0"><binary ref="117"/></frame><frame id="472" name="-[CFPrefsSource copyValueForKey:]" addr="0x7ff8178d18fc"><binary ref="117"/></frame><frame id="473" name="__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke" addr="0x7ff8178d18ad"><binary ref="117"/></frame><frame id="474" name="__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke" addr="0x7ff8178ca386"><binary ref="117"/></frame><frame id="475" name="-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:]" addr="0x7ff817a363eb"><binary ref="117"/></frame><frame id="476" name="-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]" addr="0x7ff8178c9cc3"><binary ref="117"/></frame><frame id="477" name="_CFPreferencesCopyAppValueWithContainerAndConfiguration" addr="0x7ff8178c9bf8"><binary ref="117"/></frame><frame id="478" name="_CFBundleCopyUserLanguages" addr="0x7ff8178e9808"><binary ref="117"/></frame><frame id="479" name="_CFBundleCopyLanguageSearchListInBundle" addr="0x7ff8178e957f"><binary ref="117"/></frame><frame id="480" name="_copyQueryTable" addr="0x7ff8178e93aa"><binary ref="117"/></frame><frame id="481" name="_copyResourceURLsFromBundle" addr="0x7ff8178e8d32"><binary ref="117"/></frame><frame id="482" name="_CFBundleCopyFindResources" addr="0x7ff8178e8095"><binary ref="117"/></frame><frame id="483" name="CFBundleCopyResourceURL" addr="0x7ff8178e7b73"><binary ref="117"/></frame><frame id="484" name="_CFBundleGetStringsSources" addr="0x7ff817a3e5e2"><binary ref="117"/></frame><frame id="485" name="_copyStringTable" addr="0x7ff817a40476"><binary ref="117"/></frame><frame id="486" name="_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption" addr="0x7ff817a3ffbe"><binary ref="117"/></frame><frame id="487" name="CFBundleCopyLocalizedString" addr="0x7ff817904321"><binary ref="117"/></frame><frame id="488" name="_CFCopyLocalizedVersionKey" addr="0x7ff8179042c4"><binary ref="117"/></frame><frame ref="416"/><frame ref="417"/><frame ref="143"/><frame ref="144"/><frame ref="418"/><frame ref="419"/><frame ref="420"/><frame ref="143"/><frame ref="144"/><frame ref="421"/><frame ref="422"/><frame ref="423"/><frame ref="424"/><frame ref="425"/><frame ref="426"/><frame ref="428"/><frame ref="429"/><frame ref="430"/><frame ref="406"/><frame ref="431"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="433"/><frame ref="434"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="489" fmt="00:00.206.295">206295480</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="490"><frame id="491" name="std::__1::__call_once(unsigned long volatile&amp;, void*, void (*)(void*))" addr="0x7ff81777d259"><binary id="492" name="libc++.1.dylib" UUID="8B258FAF-4392-3385-A019-D80F49C5AF31" arch="x86_64" load-addr="0x7ff81776d000" path="/usr/lib/libc++.1.dylib"/></frame><frame id="493" name="icu::umtx_initImplPreInit(icu::UInitOnce&amp;)" addr="0x7ff81a2dcc5c"><binary id="494" name="libicucore.A.dylib" UUID="89D46A46-61A3-35EC-807E-307D8BCA9BEA" arch="x86_64" load-addr="0x7ff81a241000" path="/usr/lib/libicucore.A.dylib"/></frame><frame id="495" name="ualoc_localizationsToUse" addr="0x7ff81a291247"><binary ref="494"/></frame><frame id="496" name="_CFBundleCreateMutableArrayOfFallbackLanguages" addr="0x7ff8178dc335"><binary ref="117"/></frame><frame id="497" name="_CFBundleCopyPreferredLanguagesInList" addr="0x7ff8178dbf8a"><binary ref="117"/></frame><frame id="498" name="_CFBundleCopyLanguageSearchListInBundle" addr="0x7ff8178e95a8"><binary ref="117"/></frame><frame ref="480"/><frame ref="481"/><frame ref="482"/><frame ref="483"/><frame ref="484"/><frame ref="485"/><frame ref="486"/><frame ref="487"/><frame ref="488"/><frame ref="416"/><frame ref="417"/><frame ref="143"/><frame ref="144"/><frame ref="418"/><frame ref="419"/><frame ref="420"/><frame ref="143"/><frame ref="144"/><frame ref="421"/><frame ref="422"/><frame ref="423"/><frame ref="424"/><frame ref="425"/><frame ref="426"/><frame ref="428"/><frame ref="429"/><frame ref="430"/><frame ref="406"/><frame ref="431"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="433"/><frame ref="434"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="499" fmt="00:00.207.294">207294971</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="500"><frame id="501" name="__open" addr="0x7ff8177ffd67"><binary ref="65"/></frame><frame id="502" name="_NSReadBytesFromFileWithExtendedAttributes" addr="0x7ff81876adc1"><binary ref="125"/></frame><frame id="503" name="-[_NSBPlistMappedData initWithFileURL:error:]" addr="0x7ff818c7cb05"><binary ref="125"/></frame><frame id="504" name="__NSCreateBPlistMappedDataFromURL" addr="0x7ff818c7c929"><binary ref="125"/></frame><frame id="505" name="_CFBundleMapStringsFile" addr="0x7ff817a3f3e1"><binary ref="117"/></frame><frame id="506" name="__CFBundleMapOrLoadPlistData" addr="0x7ff817a41565"><binary ref="117"/></frame><frame id="507" name="_CFBundleLoadNonLocTableData" addr="0x7ff817a3fa94"><binary ref="117"/></frame><frame id="508" name="_CFBundleGetStringsSources" addr="0x7ff817a3ee54"><binary ref="117"/></frame><frame ref="485"/><frame ref="486"/><frame ref="487"/><frame ref="488"/><frame ref="416"/><frame ref="417"/><frame ref="143"/><frame ref="144"/><frame ref="418"/><frame ref="419"/><frame ref="420"/><frame ref="143"/><frame ref="144"/><frame ref="421"/><frame ref="422"/><frame ref="423"/><frame ref="424"/><frame ref="425"/><frame ref="426"/><frame ref="428"/><frame ref="429"/><frame ref="430"/><frame ref="406"/><frame ref="431"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="433"/><frame ref="434"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="509" fmt="00:00.209.294">209294954</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="510"><frame id="511" name="__CFSearchStringROM" addr="0x7ff8178a0d94"><binary ref="117"/></frame><frame ref="118"/><frame ref="119"/><frame id="512" name="____CFBinaryPlistCreateObjectFiltered_block_invoke" addr="0x7ff8179c33e5"><binary ref="117"/></frame><frame id="513" name="__CFBinaryPlistCreateObjectFiltered" addr="0x7ff8178d543a"><binary ref="117"/></frame><frame id="514" name="__CFBinaryPlistCreateObjectFiltered" addr="0x7ff8178d5fec"><binary ref="117"/></frame><frame id="515" name="__CFBinaryPlistCreateObjectFiltered" addr="0x7ff8178d65ba"><binary ref="117"/></frame><frame id="516" name="__CFTryParseBinaryPlist" addr="0x7ff8178ba7b3"><binary ref="117"/></frame><frame id="517" name="_CFPropertyListCreateWithData" addr="0x7ff8179b362d"><binary ref="117"/></frame><frame id="518" name="CFPropertyListCreateWithData" addr="0x7ff8178ba65d"><binary ref="117"/></frame><frame id="519" name="_SCUnserialize" addr="0x7ff8184366cf"><binary id="520" name="SystemConfiguration" UUID="3918F069-1EB7-3441-8584-85C2C2EF9912" arch="x86_64" load-addr="0x7ff818434000" path="/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration"/></frame><frame id="521" name="__SCDynamicStoreCopyValueCommon" addr="0x7ff818452525"><binary ref="520"/></frame><frame id="522" name="SCDynamicStoreCopyProxiesWithOptions" addr="0x7ff818439f48"><binary ref="520"/></frame><frame id="523" name="setProxyProperties" addr="0x109f0a02e"><binary ref="427"/></frame><frame id="524" name="GetJavaProperties" addr="0x109f0aa54"><binary ref="427"/></frame><frame ref="429"/><frame ref="430"/><frame ref="406"/><frame ref="431"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="433"/><frame ref="434"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="525" fmt="00:00.210.294">210294560</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="526"><frame id="527" name="InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code)" addr="0x10b50a92a"><binary ref="196"/></frame><frame id="528" name="InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)" addr="0x10b50bd5b"><binary ref="196"/></frame><frame id="529" name="0x11b0fa293" addr="0x11b0fa293"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="433"/><frame ref="434"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="530" fmt="00:00.211.294">211294779</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="531"><frame ref="57"/><frame ref="199"/><frame id="532" name="dyld4::APIs::dlsym(void*, char const*)" addr="0x7ff8175181d4"><binary ref="12"/></frame><frame id="533" name="NativeLookup::lookup_style(methodHandle const&amp;, char*, char const*, int, bool, JavaThread*)" addr="0x10b871a06"><binary ref="196"/></frame><frame id="534" name="NativeLookup::lookup_entry(methodHandle const&amp;, JavaThread*)" addr="0x10b871b99"><binary ref="196"/></frame><frame id="535" name="NativeLookup::lookup_base(methodHandle const&amp;, JavaThread*)" addr="0x10b8724c6"><binary ref="196"/></frame><frame id="536" name="NativeLookup::lookup(methodHandle const&amp;, JavaThread*)" addr="0x10b872608"><binary ref="196"/></frame><frame id="537" name="InterpreterRuntime::prepare_native_call(JavaThread*, Method*)" addr="0x10b50dc28"><binary ref="196"/></frame><frame id="538" name="0x11b0ef3cb" addr="0x11b0ef3cb"/><frame id="539" name="0x11b0eb35c" addr="0x11b0eb35c"/><frame ref="406"/><frame ref="431"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="433"/><frame ref="434"/><frame ref="401"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="540" fmt="00:00.212.312">212312230</sample-time><thread id="541" fmt="Java: Monitor Deflation Thread  0xe788b (java, pid: 23369)"><tid id="542" fmt="0xe788b">948363</tid><process ref="4"/></thread><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="543"><frame id="544" name="thread_start" addr="0x7ff817839bc5"><binary ref="68"/></frame><frame id="545" name="thread_start" addr="0x7ff817839bc4"><binary ref="68"/></frame></backtrace></row>
        <row><sample-time id="546" fmt="00:00.212.312">212312329</sample-time><thread id="547" fmt="Java: Service Thread  0xe788a (java, pid: 23369)"><tid id="548" fmt="0xe788a">948362</tid><process ref="4"/></thread><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="549"><frame id="550" name="__psynch_cvwait" addr="0x7ff8178020ff"><binary ref="65"/></frame><frame id="551" name="os::PlatformMonitor::wait(long)" addr="0x10b8a9420"><binary ref="196"/></frame><frame id="552" name="Monitor::wait_without_safepoint_check(long long)" addr="0x10b86cc56"><binary ref="196"/></frame><frame id="553" name="thread_native_entry(Thread*)" addr="0x10b8a12aa"><binary ref="196"/></frame><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="554" fmt="00:00.213.294">213294751</sample-time><thread id="555" fmt="Java: C1 CompilerThread0  0xe788d (java, pid: 23369)"><tid id="556" fmt="0xe788d">948365</tid><process ref="4"/></thread><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="557"><frame id="558" name="C1_MacroAssembler::load_parameter(int, RegisterImpl*)" addr="0x10b24e70b"><binary ref="196"/></frame><frame id="559" name="Runtime1::generate_code_for(Runtime1::StubID, StubAssembler*)" addr="0x10b25d799"><binary ref="196"/></frame><frame id="560" name="Runtime1::generate_blob(BufferBlob*, int, char const*, bool, StubAssemblerCodeGenClosure*)" addr="0x10b256e2c"><binary ref="196"/></frame><frame id="561" name="Runtime1::initialize(BufferBlob*)" addr="0x10b256f88"><binary ref="196"/></frame><frame id="562" name="Compiler::initialize()" addr="0x10b1db232"><binary ref="196"/></frame><frame id="563" name="CompileBroker::init_compiler_runtime()" addr="0x10b3295e1"><binary ref="196"/></frame><frame id="564" name="CompileBroker::compiler_thread_loop()" addr="0x10b329c3e"><binary ref="196"/></frame><frame id="565" name="JavaThread::thread_main_inner()" addr="0x10ba98d0f"><binary ref="196"/></frame><frame id="566" name="Thread::call_run()" addr="0x10ba9707f"><binary ref="196"/></frame><frame id="567" name="thread_native_entry(Thread*)" addr="0x10b8a1328"><binary ref="196"/></frame><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="568" fmt="00:00.213.294">213294977</sample-time><thread id="569" fmt="Java: C2 CompilerThread0  0xe788c (java, pid: 23369)"><tid id="570" fmt="0xe788c">948364</tid><process ref="4"/></thread><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="571"><frame ref="272"/><frame id="572" name="NodeHash::NodeHash(Arena*, unsigned int)" addr="0x10b8dbcef"><binary ref="196"/></frame><frame id="573" name="PhaseValues::PhaseValues(Arena*, unsigned int)" addr="0x10b8dcfe4"><binary ref="196"/></frame><frame id="574" name="Compile::Compile(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool, DirectiveSet*)" addr="0x10b31aa0c"><binary ref="196"/></frame><frame id="575" name="OptoRuntime::generate_stub(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool)" addr="0x10b92d692"><binary ref="196"/></frame><frame id="576" name="OptoRuntime::generate(ciEnv*)" addr="0x10b92d2c2"><binary ref="196"/></frame><frame id="577" name="C2Compiler::initialize()" addr="0x10b2781c8"><binary ref="196"/></frame><frame ref="563"/><frame ref="564"/><frame ref="565"/><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="578" fmt="00:00.213.295">213295156</sample-time><thread ref="213"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="579"><frame id="580" name="LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, JavaThread*)" addr="0x10b727c96"><binary ref="196"/></frame><frame id="581" name="LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*)" addr="0x10b7273b9"><binary ref="196"/></frame><frame id="582" name="LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, JavaThread*)" addr="0x10b729d15"><binary ref="196"/></frame><frame id="583" name="LinkResolver::resolve_invokevirtual(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, JavaThread*)" addr="0x10b72b3f5"><binary ref="196"/></frame><frame ref="389"/><frame ref="390"/><frame id="584" name="0x11b0fb477" addr="0x11b0fb477"/><frame ref="431"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="394"/><frame ref="395"/><frame ref="396"/><frame ref="397"/><frame ref="389"/><frame ref="390"/><frame ref="398"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame id="585" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9d9c8"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="586" fmt="00:00.214.294">214294778</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="587"><frame id="588" name="ConstantPool::impl_signature_ref_at(int, bool)" addr="0x10b344284"><binary ref="196"/></frame><frame ref="390"/><frame id="589" name="0x11b0fbef7" addr="0x11b0fbef7"/><frame ref="431"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="394"/><frame ref="395"/><frame ref="396"/><frame ref="397"/><frame ref="389"/><frame ref="390"/><frame ref="398"/><frame id="590" name="0x11b0eb317" addr="0x11b0eb317"/><frame ref="392"/><frame ref="393"/><frame ref="394"/><frame ref="395"/><frame ref="399"/><frame ref="399"/><frame id="591" name="HeapShared::resolve_or_init_classes_for_subgraph_of(Klass*, bool, JavaThread*)" addr="0x10b4d84e1"><binary ref="196"/></frame><frame id="592" name="HeapShared::initialize_from_archived_subgraph(Klass*, JavaThread*)" addr="0x10b4d867d"><binary ref="196"/></frame><frame id="593" name="JVM_InitializeFromArchive" addr="0x10b5c1235"><binary ref="196"/></frame><frame ref="430"/><frame ref="431"/><frame ref="392"/><frame ref="393"/><frame ref="394"/><frame ref="395"/><frame ref="396"/><frame ref="397"/><frame ref="389"/><frame ref="390"/><frame ref="391"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="432"/><frame ref="585"/><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="594" fmt="00:00.214.295">214295156</sample-time><thread ref="569"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="595"><frame id="596" name="IndexSetIterator::advance_and_next()" addr="0x10b4ec105"><binary ref="196"/></frame><frame id="597" name="PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;)" addr="0x10b4e2c9a"><binary ref="196"/></frame><frame id="598" name="PhaseChaitin::build_ifg_physical(ResourceArea*)" addr="0x10b4e3bb8"><binary ref="196"/></frame><frame id="599" name="PhaseChaitin::Register_Allocate()" addr="0x10b298cb3"><binary ref="196"/></frame><frame id="600" name="Compile::Code_Gen()" addr="0x10b319d95"><binary ref="196"/></frame><frame id="601" name="Compile::Compile(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool, DirectiveSet*)" addr="0x10b31aa66"><binary ref="196"/></frame><frame ref="575"/><frame id="602" name="OptoRuntime::generate(ciEnv*)" addr="0x10b92d340"><binary ref="196"/></frame><frame ref="577"/><frame ref="563"/><frame ref="564"/><frame ref="565"/><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="603" fmt="00:00.215.294">215294733</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="604"><frame id="605" name="_pthread_create" addr="0x7ff81783ef17"><binary ref="68"/></frame><frame id="606" name="os::create_thread(Thread*, os::ThreadType, unsigned long)" addr="0x10b8a0f28"><binary ref="196"/></frame><frame id="607" name="NotificationThread::initialize()" addr="0x10b88098b"><binary ref="196"/></frame><frame id="608" name="Management::initialize(JavaThread*)" addr="0x10b8017e5"><binary ref="196"/></frame><frame id="609" name="Threads::create_vm(JavaVMInitArgs*, bool*)" addr="0x10ba9dacd"><binary ref="196"/></frame><frame ref="221"/><frame ref="222"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="610" fmt="00:00.215.295">215295149</sample-time><thread ref="569"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="611"><frame id="612" name="PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)" addr="0x10b8e4251"><binary ref="196"/></frame><frame id="613" name="PhaseChaitin::post_allocate_copy_removal()" addr="0x10b8e6367"><binary ref="196"/></frame><frame id="614" name="PhaseChaitin::Register_Allocate()" addr="0x10b299082"><binary ref="196"/></frame><frame ref="600"/><frame ref="601"/><frame ref="575"/><frame id="615" name="OptoRuntime::generate(ciEnv*)" addr="0x10b92d4f3"><binary ref="196"/></frame><frame ref="577"/><frame ref="563"/><frame ref="564"/><frame ref="565"/><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="616" fmt="00:00.216.294">216294905</sample-time><thread ref="213"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="617"><frame id="618" name="void SignatureIterator::do_parameters_on&lt;ArgumentSizeComputer&gt;(ArgumentSizeComputer*)" addr="0x10b9d8cb4"><binary ref="196"/></frame><frame id="619" name="frame::interpreter_callee_receiver_addr(Symbol*)" addr="0x10b3f8135"><binary ref="196"/></frame><frame id="620" name="InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code)" addr="0x10b50b530"><binary ref="196"/></frame><frame ref="390"/><frame ref="584"/><frame id="621" name="0x11b0eb6a2" addr="0x11b0eb6a2"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame id="622" name="JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)" addr="0x10b511607"><binary ref="196"/></frame><frame id="623" name="JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, JavaThread*)" addr="0x10b511770"><binary ref="196"/></frame><frame id="624" name="SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*)" addr="0x10ba5743a"><binary ref="196"/></frame><frame ref="382"/><frame ref="383"/><frame ref="384"/><frame id="625" name="JVM_FindClassFromCaller" addr="0x10b5adf21"><binary ref="196"/></frame><frame id="626" name="Java_java_lang_Class_forName0" addr="0x109eff535"><binary ref="427"/></frame><frame ref="430"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame id="627" name="jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*)" addr="0x10b576998"><binary ref="196"/></frame><frame id="628" name="jni_CallStaticObjectMethod" addr="0x10b5772b7"><binary ref="196"/></frame><frame id="629" name="JavaMain" addr="0x109e4dd86"><binary ref="160"/></frame><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="630" fmt="00:00.216.295">216295276</sample-time><thread ref="555"/><process ref="4"/><core ref="7"/><thread-state ref="8"/><weight ref="9"/><backtrace id="631"><frame id="632" name="BitMap::set_difference(BitMap const&amp;)" addr="0x10b1b53e7"><binary ref="196"/></frame><frame id="633" name="LinearScan::compute_global_live_sets()" addr="0x10b23e48b"><binary ref="196"/></frame><frame id="634" name="LinearScan::do_linear_scan()" addr="0x10b245c53"><binary ref="196"/></frame><frame id="635" name="Compilation::emit_lir()" addr="0x10b1d9155"><binary ref="196"/></frame><frame id="636" name="Compilation::compile_java_method()" addr="0x10b1d9ae3"><binary ref="196"/></frame><frame id="637" name="Compilation::compile_method()" addr="0x10b1d9dec"><binary ref="196"/></frame><frame id="638" name="Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)" addr="0x10b1da218"><binary ref="196"/></frame><frame id="639" name="Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)" addr="0x10b1db881"><binary ref="196"/></frame><frame id="640" name="CompileBroker::invoke_compiler_on_method(CompileTask*)" addr="0x10b32a68e"><binary ref="196"/></frame><frame id="641" name="CompileBroker::compiler_thread_loop()" addr="0x10b329f4b"><binary ref="196"/></frame><frame ref="565"/><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="642" fmt="00:00.217.295">217295112</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="643"><frame ref="501"/><frame id="644" name="handleOpen" addr="0x109f09380"><binary ref="427"/></frame><frame id="645" name="fileOpen" addr="0x109f094d0"><binary ref="427"/></frame><frame ref="430"/><frame ref="431"/><frame ref="431"/><frame ref="431"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="622"/><frame ref="623"/><frame ref="624"/><frame ref="382"/><frame ref="383"/><frame ref="384"/><frame ref="625"/><frame ref="626"/><frame ref="430"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="627"/><frame ref="628"/><frame ref="629"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="646" fmt="00:00.218.295">218295185</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="647"><frame id="648" name="0x11b0ee518" addr="0x11b0ee518"/><frame ref="406"/><frame ref="621"/><frame ref="621"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="622"/><frame ref="623"/><frame ref="624"/><frame ref="382"/><frame ref="383"/><frame ref="384"/><frame ref="625"/><frame ref="626"/><frame ref="430"/><frame ref="406"/><frame ref="406"/><frame ref="406"/><frame ref="392"/><frame ref="393"/><frame ref="627"/><frame ref="628"/><frame ref="629"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="649" fmt="00:01.344.298">1344298874</sample-time><thread ref="213"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="650"><frame ref="550"/><frame id="651" name="os::PlatformEvent::park(long)" addr="0x10b8a8a83"><binary ref="196"/></frame><frame id="652" name="JavaThread::sleep(long)" addr="0x10ba9c0a0"><binary ref="196"/></frame><frame id="653" name="JVM_Sleep" addr="0x10b5bd443"><binary ref="196"/></frame><frame ref="430"/><frame ref="431"/><frame ref="392"/><frame ref="393"/><frame ref="627"/><frame id="654" name="jni_CallStaticVoidMethod" addr="0x10b579e17"><binary ref="196"/></frame><frame id="655" name="JavaMain" addr="0x109e4dfbf"><binary ref="160"/></frame><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="656" fmt="00:01.740.298">1740298072</sample-time><thread id="657" fmt="Java: VM Periodic Task Thread  0xe7890 (java, pid: 23369)"><tid id="658" fmt="0xe7890">948368</tid><process ref="4"/></thread><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="659"><frame id="660" name="StatSamplerTask::task()" addr="0x10b9eb3e1"><binary ref="196"/></frame><frame id="661" name="WatcherThread::run()" addr="0x10b880427"><binary ref="196"/></frame><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="662" fmt="00:02.463.298">2463298477</sample-time><thread ref="213"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace id="663"><frame id="664" name="0x11b0f4a8b" addr="0x11b0f4a8b"/><frame ref="392"/><frame ref="393"/><frame ref="627"/><frame ref="654"/><frame ref="655"/><frame ref="223"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="665" fmt="00:03.008.300">3008300009</sample-time><thread ref="657"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace id="666"><frame ref="550"/><frame id="667" name="os::PlatformMonitor::wait(long)" addr="0x10b8a947c"><binary ref="196"/></frame><frame ref="552"/><frame id="668" name="WatcherThread::sleep() const" addr="0x10b88036e"><binary ref="196"/></frame><frame id="669" name="WatcherThread::run()" addr="0x10b88042f"><binary ref="196"/></frame><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="670" fmt="00:03.272.299">3272299639</sample-time><thread ref="657"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="666"/></row>
        <row><sample-time id="671" fmt="00:04.260.299">4260299450</sample-time><thread ref="541"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace id="672"><frame ref="550"/><frame ref="667"/><frame ref="552"/><frame id="673" name="MonitorDeflationThread::monitor_deflation_thread_entry(JavaThread*, JavaThread*)" addr="0x10b86215b"><binary ref="196"/></frame><frame ref="565"/><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="674" fmt="00:04.472.296">4472296195</sample-time><thread ref="657"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="666"/></row>
        <row><sample-time id="675" fmt="00:05.996.300">5996300727</sample-time><thread ref="657"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="666"/></row>
        <row><sample-time id="676" fmt="00:06.027.299">6027299460</sample-time><thread ref="541"/><process ref="4"/><core ref="184"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="672"/></row>
        <row><sample-time id="677" fmt="00:06.684.298">6684298282</sample-time><thread ref="657"/><process ref="4"/><core ref="34"/><thread-state ref="8"/><weight ref="9"/><backtrace ref="666"/></row>
        <row><sample-time id="678" fmt="00:09.222.311">9222311453</sample-time><thread id="679" fmt="Java: VM Thread  0xe7884 (java, pid: 23369)"><tid id="680" fmt="0xe7884">948356</tid><process ref="4"/></thread><process ref="4"/><core id="681" fmt="CPU 7 (SMT Core)">7</core><thread-state ref="8"/><weight ref="9"/><backtrace id="682"><frame id="683" name="__gettimeofday" addr="0x7ff81780258e"><binary ref="65"/></frame><frame ref="667"/><frame ref="552"/><frame id="684" name="VMThread::wait_for_operation()" addr="0x10bb28124"><binary ref="196"/></frame><frame id="685" name="VMThread::run()" addr="0x10bb2708a"><binary ref="196"/></frame><frame ref="566"/><frame ref="567"/><frame ref="165"/><frame ref="166"/></backtrace></row>
        <row><sample-time id="686" fmt="00:10.466.297">10466297466</sample-time><thread ref="148"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><sentinel/></row>
        <row><sample-time id="687" fmt="00:10.467.296">10467296207</sample-time><thread ref="148"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><sentinel/></row>
        <row><sample-time id="688" fmt="00:10.468.304">10468304658</sample-time><thread ref="148"/><process ref="4"/><core ref="62"/><thread-state ref="8"/><weight ref="9"/><sentinel/></row>
    </node></trace-query-result>
